<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>プログラミング言語 Nim (非公式日本語β版)</title>
    <description>プログラミング言語 Nim は C, C++ と JavaScript へ コンパイルを行える簡潔で高速なプログラミング言語です。
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 30 Nov 2019 13:01:33 +0900</pubDate>
    <lastBuildDate>Sat, 30 Nov 2019 13:01:33 +0900</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Version 1.0.4 released</title>
        <description>&lt;p&gt;The Nim team is happy to announce version 1.0.4, our second patch release following
Nim 1.0.0.&lt;/p&gt;

&lt;p&gt;To read more about version 1.0.0, take a look at our
&lt;a href=&quot;https://nim-lang.org/blog/2019/09/23/version-100-released.html&quot;&gt;release article&lt;/a&gt;
from two months ago.&lt;/p&gt;

&lt;p&gt;Although this release comes only one month after a previous release,
it has over &lt;a href=&quot;https://github.com/nim-lang/Nim/compare/v1.0.2...v1.0.4&quot;&gt;70 new commits&lt;/a&gt;,
fixing another 20 reported issues, making our 1.0 release even better.&lt;/p&gt;

&lt;h2 id=&quot;installing-104&quot;&gt;Installing 1.0.4&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 1.0.4 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;Find this release’s changelog together with the rest of Nim’s source code
&lt;a href=&quot;https://github.com/nim-lang/Nim/blob/version-1-0/changelogs/changelog_1_0_4.md&quot;&gt;in our GitHub repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/11/26/version-104-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/11/26/version-104-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 1.0.2 released</title>
        <description>&lt;p&gt;The Nim team is happy to announce version 1.0.2, our first patch release following
Nim 1.0.0.&lt;/p&gt;

&lt;p&gt;To read more about version 1.0.0, take a look at our
&lt;a href=&quot;https://nim-lang.org/blog/2019/09/23/version-100-released.html&quot;&gt;release article&lt;/a&gt;
from just a month ago.&lt;/p&gt;

&lt;p&gt;Although this release comes only one month after a previous release,
it has over &lt;a href=&quot;https://github.com/nim-lang/Nim/compare/v1.0.0...v1.0.2&quot;&gt;60 new commits&lt;/a&gt;,
fixing over 40 reported issues, making our 1.0 release even better.&lt;/p&gt;

&lt;h2 id=&quot;installing-102&quot;&gt;Installing 1.0.2&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 1.0.2 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;div class=&quot;sidebarblock&quot;&gt;
  &lt;div class=&quot;content&quot;&gt;
    &lt;div class=&quot;paragraph&quot;&gt;
      Find this release's changelog together with the rest of Nim's source code &lt;a href=&quot;https://github.com/nim-lang/Nim/blob/devel/changelogs/changelog_1_0_2.md&quot;&gt;in our GitHub repository&lt;/a&gt;.
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/10/23/version-102-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/10/23/version-102-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 1.0 を公開しました</title>
        <description>&lt;p&gt;Today is the day. The Nim Team is very proud
and happy to announce the much-anticipated version 1.0 of the language.&lt;/p&gt;

&lt;p&gt;Nim has always been focused on providing a compiled statically typed language
focusing on efficiency, readability and flexibility.&lt;/p&gt;

&lt;p&gt;Version 1.0 marks the beginning of a stable base which
can be used in the coming years, knowing that the future versions of Nim won’t
break the code you have written with the current version.&lt;/p&gt;

&lt;p&gt;Nim has built a warm and welcoming &lt;a href=&quot;https://nim-lang.org/community.html&quot;&gt;community&lt;/a&gt;
which is ready to help newcomers to the language.&lt;/p&gt;

&lt;p&gt;If you are one of the new users, check out our
&lt;a href=&quot;https://nim-lang.org/learn.html&quot;&gt;learning resources&lt;/a&gt; and try Nim in
&lt;a href=&quot;https://play.nim-lang.org/&quot;&gt;our playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This release includes many changes, including bug fixes and some
language additions. All changes are documented in the v1.0.0 changelog
available &lt;a href=&quot;https://github.com/nim-lang/Nim/blob/devel/changelogs/changelog_1_0_0.md&quot;&gt;here&lt;/a&gt;.
Included as well is the latest release of Nimble, v0.11.0, the changelog for which is available
&lt;a href=&quot;https://github.com/nim-lang/nimble/blob/master/changelog.markdown#0110---22092019&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-stability-guarantee&quot;&gt;The stability guarantee&lt;/h1&gt;

&lt;p&gt;Version 1.0 is now a long-term supported stable release that will only
receive bug fixes and new features in the future, as long as they don’t
break backwards compatibility.&lt;/p&gt;

&lt;p&gt;The 1.0.x branch will receive bug fixes for as long as there is demand for them.
New features (which do not break backwards compatibility) will continue in
steadily advancing 1.x branches.&lt;/p&gt;

&lt;p&gt;Our goal is to make sure that code which compiled under Nim 1.0 continues to
compile under any stable Nim 1.x version in the future.&lt;/p&gt;

&lt;h2 id=&quot;what-is-included-under-the-stability-guarantee&quot;&gt;What is included under the stability guarantee?&lt;/h2&gt;

&lt;p&gt;Backwards compatibility covers only the stable fragment of the language,
as defined by the &lt;a href=&quot;https://nim-lang.org/docs/manual.html&quot;&gt;manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The compiler still implements experimental features which are documented in the
&lt;a href=&quot;https://nim-lang.org/docs/manual_experimental.html&quot;&gt;“experimental manual”&lt;/a&gt;.
These features are subject to changes which may be backwards incompatible;
some of the features included under this umbrella are concepts,
the &lt;code class=&quot;highlighter-rouge&quot;&gt;do&lt;/code&gt; notation and a few others. There are also modules in the stdlib
which are still considered unstable - these have been marked with an
“Unstable API” in their docs.&lt;/p&gt;

&lt;p&gt;You can use experimental features, even in production, but be aware that
these are not as fleshed out as we would like them to be.&lt;/p&gt;

&lt;h2 id=&quot;exceptions-to-the-rule&quot;&gt;Exceptions to the rule&lt;/h2&gt;

&lt;p&gt;We of course have to concede that there are exceptions.
In certain serious cases, for example if a security vulnerability is
discovered in the standard library, we reserve the right to break code which
uses it.&lt;/p&gt;

&lt;h1 id=&quot;installing-nim-10&quot;&gt;Installing Nim 1.0&lt;/h1&gt;

&lt;h2 id=&quot;new-users&quot;&gt;New users&lt;/h2&gt;

&lt;p&gt;Check out if the package manager of your OS already ships version 1.0 or
install it as described &lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;existing-users&quot;&gt;Existing users&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 1.0 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;contributors&quot;&gt;Contributors&lt;/h1&gt;

&lt;p&gt;Over the years, more than 500 people contributed to the Nim codebase,
implementing new features, fixing bugs and issues, writing documentation, and
so on.
The Nim team would like to thank all of you who helped us build Nim to become
what it is today.&lt;/p&gt;

&lt;p&gt;We would also want to thank all people who have created Nimble packages,
extending what is possible to do with Nim.
The number of Nimble packages has been steadily growing, and in August 2019 we
broke the 1000 package milestone!
We are optimistic that with this release we will see even bigger growth of
new and exciting packages.&lt;/p&gt;

&lt;p&gt;If you would like to help Nim grow consider donating via
&lt;a href=&quot;https://opencollective.com/nim&quot;&gt;Open Collective&lt;/a&gt; or &lt;a href=&quot;https://nim-lang.org/donate.html&quot;&gt;other services&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/09/23/version-100-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/09/23/version-100-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 0.20.2 を公開しました</title>
        <description>&lt;p&gt;Nim チームは version 1.0 の第２リリース候補である version 0.20.2 を発表できてうれしいと思います。&lt;/p&gt;

&lt;p&gt;To read more about version 0.20 and our plans for version 1.0 and beyond,
check the &lt;a href=&quot;https://nim-lang.org/blog/2019/06/06/version-0200-released.html&quot;&gt;previous release notes&lt;/a&gt;.
This is mostly a bugfix release of version 0.20.0 (1.0 RC1).&lt;/p&gt;

&lt;p&gt;The only new feature is that &lt;code class=&quot;highlighter-rouge&quot;&gt;toOpenArray&lt;/code&gt;, our slicing operator,
is now available for the JavaScript backend.&lt;/p&gt;

&lt;p&gt;Although this release comes only one month after a previous release,
it has over 200 new commits, fixing over 70 reported issues and bringing
lots of improvements which should make Nim even more stable.&lt;/p&gt;

&lt;h3 id=&quot;style-checks&quot;&gt;Style checks&lt;/h3&gt;

&lt;p&gt;Since version 0.20.0 we improved our style checker to the point that
Nim now bootstraps with &lt;code class=&quot;highlighter-rouge&quot;&gt;--styleCheck:error&lt;/code&gt; flag, meaning that the compiler
and the standard library are now style checked and they won’t compile if
different styles (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;fooBar&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;foo_bar&lt;/code&gt;) are used.&lt;/p&gt;

&lt;p&gt;If you would like to only style check your own nimble package, but not its
dependencies, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;--styleCheck:hint&lt;/code&gt;, making your package consistent
while still retaining perfect interoperability with all other Nim code in the wild.&lt;/p&gt;

&lt;h3 id=&quot;nimpretty&quot;&gt;Nimpretty&lt;/h3&gt;

&lt;p&gt;One of the areas which we focused on for this release is our &lt;code class=&quot;highlighter-rouge&quot;&gt;nimpretty&lt;/code&gt; tool –
it is a Nim source code beautifier, to format code according to the official
style guide (&lt;a href=&quot;https://nim-lang.org/docs/nep1.html&quot;&gt;NEP-1&lt;/a&gt;).
More than 30 commits were made aiming to improve &lt;code class=&quot;highlighter-rouge&quot;&gt;nimpretty&lt;/code&gt; experience and
to make it more robust for real-world scenarios.
Nimpretty version 0.2 ships with Nim, and we invite you to give it a try.&lt;/p&gt;

&lt;h3 id=&quot;new-runtime&quot;&gt;New runtime&lt;/h3&gt;

&lt;p&gt;The new runtime is progressing nicely but it is off the critical path for
version 1.0 as it’s an opt-in feature.
The next significant milestone is to make the new runtime work with &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt;.
Only after this is accomplished we can push for more adoption of it.&lt;/p&gt;

&lt;h2 id=&quot;installing-0202&quot;&gt;Installing 0.20.2&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 0.20.2 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h2 id=&quot;changes-affecting-backwards-compatibility&quot;&gt;Changes affecting backwards compatibility&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;All &lt;code class=&quot;highlighter-rouge&quot;&gt;strutils.rfind&lt;/code&gt; procs now take &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;last&lt;/code&gt; like &lt;code class=&quot;highlighter-rouge&quot;&gt;strutils.find&lt;/code&gt;
with the same data slice/index meaning. This is backwards compatible for
calls &lt;em&gt;not&lt;/em&gt; changing the &lt;code class=&quot;highlighter-rouge&quot;&gt;rfind&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; parameter from its default. (#11487)&lt;/p&gt;

    &lt;p&gt;In the unlikely case that you were using &lt;code class=&quot;highlighter-rouge&quot;&gt;rfind X, start=N&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;rfind X, N&lt;/code&gt;,
then you need to change that to &lt;code class=&quot;highlighter-rouge&quot;&gt;rfind X, last=N&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;rfind X, 0, N&lt;/code&gt;. (This
should minimize gotchas porting code from other languages like Python or C++.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On Windows stderr/stdout/stdin are not opened as binary files anymore. Use the switch
&lt;code class=&quot;highlighter-rouge&quot;&gt;-d:nimBinaryStdFiles&lt;/code&gt; for a transition period.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;breaking-changes-in-the-standard-library&quot;&gt;Breaking changes in the standard library&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Mac OS X / BSD: TSa_Family is now the &lt;code class=&quot;highlighter-rouge&quot;&gt;uint8&lt;/code&gt; type, so type
conversions like &lt;code class=&quot;highlighter-rouge&quot;&gt;x.sin_family = uint16 toInt(nativesockets.AF_INET)&lt;/code&gt;
need to be changed into &lt;code class=&quot;highlighter-rouge&quot;&gt;x.sin_family = TSa_Family toInt(nativesockets.AF_INET)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;library-additions&quot;&gt;Library additions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;toOpenArray&lt;/code&gt; is now available for the JS target.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;library-changes&quot;&gt;Library changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Fix async IO operations stalling even after socket is closed. (#11232)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;More informative error message for &lt;code class=&quot;highlighter-rouge&quot;&gt;streams.openFileStream&lt;/code&gt;. (#11438)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compiler-changes&quot;&gt;Compiler changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Better error message for IndexError for empty containers. (#11476)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fix regression in semfold for old right shift. (#11477)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fix for passing tuples as static params to macros. (#11423)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fixed “nimpretty goes crazy with this snippet”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10295&quot;&gt;#10295&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty doesn’t trim all whitespace on the right side of an export marker”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10177&quot;&gt;#10177&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty gives invalid indentation to array elements”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9505&quot;&gt;#9505&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty doesn’t indent correctly if preceding line ends with &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;/code&gt; etc”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10159&quot;&gt;#10159&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nimpretty wrong indentation for doc comments”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10156&quot;&gt;#10156&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “HttpClient Documentation needs Proxy example”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11281&quot;&gt;#11281&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty aligns comment annoyingly”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9399&quot;&gt;#9399&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “ENDB missing from Docs and TheIndex, remove ENDB from –fullhelp”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11431&quot;&gt;#11431&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nimrod on Documentation generator”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11460&quot;&gt;#11460&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty (de)indents code where it shouldn’t”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11468&quot;&gt;#11468&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty adds spaces where it shouldn’t”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11470&quot;&gt;#11470&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty formats enums differently based on commas”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11467&quot;&gt;#11467&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “strutils.rfind start parameter is unecessarily unusual”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11430&quot;&gt;#11430&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “TinyC is not documented”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11495&quot;&gt;#11495&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “c2nim missing from 0.20.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11434&quot;&gt;#11434&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimsuggest doesn’t work unless compiled with -d:danger”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11482&quot;&gt;#11482&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “random.initRand crashes in Nim 0.20.0 JS backend”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11450&quot;&gt;#11450&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “0.20.0 fails to bootstrap when passing “–verbosity:2” (or 3) to koch”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11436&quot;&gt;#11436&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Destructors lifting doesn’t work with inheritance”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11517&quot;&gt;#11517&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “std/sums missing from TheIndex”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11543&quot;&gt;#11543&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “sequtils module: link is broken”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11546&quot;&gt;#11546&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Case Statement Macros do not work in functions above exported functions.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11556&quot;&gt;#11556&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime: internal error when initializing a proc variable”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11533&quot;&gt;#11533&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime: error when modifying a sequence”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11524&quot;&gt;#11524&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “fmod and other math module functions are missing in js mode”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4630&quot;&gt;#4630&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Object variants and new runtime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11563&quot;&gt;#11563&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime exceptions”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11577&quot;&gt;#11577&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty is not aware that the next line is a part of the same context”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11469&quot;&gt;#11469&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Distinct procs fail to compile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11600&quot;&gt;#11600&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[SharedTables] Error: undeclared identifier: ‘defaultInitialSize’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11588&quot;&gt;#11588&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newSeqOfCap is not working in newruntime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11098&quot;&gt;#11098&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty destroys source with a source code filter”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11532&quot;&gt;#11532&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unexpected behaviour when constructing with &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11525&quot;&gt;#11525&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression in 0.20.0: Nested proc using outer scope variable fails to compile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11523&quot;&gt;#11523&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “os:standalone Error: redefinition of ‘nimToCStringConv’ “
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11445&quot;&gt;#11445&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “No ambiguity error on field overloaded by &lt;code class=&quot;highlighter-rouge&quot;&gt;field=&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11514&quot;&gt;#11514&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “object variants and new runtime part 2”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11611&quot;&gt;#11611&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “seq Error: unhandled exception: value out of range: 32772 “
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11606&quot;&gt;#11606&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiled binary includes full path to internal nim files”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11572&quot;&gt;#11572&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: top-level string variable is empty after an array assignment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11614&quot;&gt;#11614&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: raise ObjContructor() doesn’t compile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11628&quot;&gt;#11628&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Owned ref can be copied and causes double-free”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11617&quot;&gt;#11617&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “When compiling to JS (in &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:release&lt;/code&gt;) output contains toolchain path on dev’s machine”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11545&quot;&gt;#11545&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “wrong unicode string output”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11618&quot;&gt;#11618&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “unittest “generic instantiation too nested” error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11515&quot;&gt;#11515&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Last read of a var parameter generates sink instead of assignment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11633&quot;&gt;#11633&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “const table with proc type does not compile anymore”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11479&quot;&gt;#11479&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Can’t use offsetOf on object that ends with an UncheckedArray”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11320&quot;&gt;#11320&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime/regression: Bad codegen for inline methods”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11636&quot;&gt;#11636&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “String or sequences inside a loop are not cleared in each iteration”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11510&quot;&gt;#11510&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim -v doesn’t acknowledge new danger flag”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11484&quot;&gt;#11484&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SIGSEGV while compiling when trying to instantiate a case type, that uses an enum with non-zero start”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11585&quot;&gt;#11585&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compile-time usage of parts of strutils fails when using -d:useNimRtl”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8405&quot;&gt;#8405&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression(0.20): &lt;code class=&quot;highlighter-rouge&quot;&gt;finally&lt;/code&gt; block executed twice in VM”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11610&quot;&gt;#11610&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “exportc symbol not exported, leading to link error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11651&quot;&gt;#11651&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Render bug: opearator priority can be wrong for second argument”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11662&quot;&gt;#11662&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim &amp;amp; C disagree on type size”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6860&quot;&gt;#6860&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Spawn passes refs across threads”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7057&quot;&gt;#7057&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “BUG: “varargs[string, &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;]”  calls &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; n^2 times instead of n times (n=len(varargs))”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8316&quot;&gt;#8316&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Problem with the same name for module and exported type”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3333&quot;&gt;#3333&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “–gc:go does not work anymore”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11447&quot;&gt;#11447&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error: inconsistent typing for reintroduced symbol”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11494&quot;&gt;#11494&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Auto generated destructors  for tuples/objects fail with “non-trivial” error…”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11671&quot;&gt;#11671&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression: parameter default value + typedesc parameter causes compiler crash”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11660&quot;&gt;#11660&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime: undetected dangling ref”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11350&quot;&gt;#11350&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: setLen() not working on sequences of owned refs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11530&quot;&gt;#11530&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Incorrect overflow/underflow error in case statements”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11551&quot;&gt;#11551&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “cgen preprocessor directive placed after struct declaration”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11691&quot;&gt;#11691&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt; in an &lt;code class=&quot;highlighter-rouge&quot;&gt;except Exception as e&lt;/code&gt; block crashes the compiler.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11683&quot;&gt;#11683&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimsuggest, nim check segfault when using bindSym and doAssert”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10901&quot;&gt;#10901&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nimpretty issue, multiline string of x length only causes output grow every time.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11700&quot;&gt;#11700&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Array indexed by distinct int doesnt work with iterators”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11715&quot;&gt;#11715&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 17 Jul 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/07/17/version-0202-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/07/17/version-0202-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 0.20.0 released</title>
        <description>&lt;p&gt;We are very proud to announce Nim version 0.20.&lt;/p&gt;

&lt;p&gt;This is a massive release, both literally and figuratively.
It contains more than 1,000 commits &lt;em&gt;and&lt;/em&gt; it marks our release candidate for version 1.0!&lt;/p&gt;

&lt;p&gt;Version 0.20 introduces a number of breaking changes required for version 1.0.
These are changes that we feel have been necessary to include in Nim 1.0 and we currently have no plans for any further breaking changes.
Version 0.20 is effectively Nim 1.0 RC1.&lt;/p&gt;

&lt;p&gt;Why not just release v1.0? We want to give the community a chance to test 0.20.0 and find bugs that &lt;em&gt;may&lt;/em&gt; require breaking changes.
This is unlikely, but may require further release candidates.
Make no mistake, this release represents what we consider Nim 1.0, we have been working towards this milestone for many years and are incredibly excited to reach it.&lt;/p&gt;

&lt;h1 id=&quot;the-stability-guarantee&quot;&gt;The stability guarantee&lt;/h1&gt;

&lt;p&gt;A 1.0 release means that once either Nim 0.20.0 is promoted to 1.0 status, or another release candidate is, there will no longer be any breaking changes made.
Version 1.0 will become a long-term supported stable release that will only receive bug fixes and new features in the future, as long as they don’t break backwards compatibility.&lt;/p&gt;

&lt;p&gt;The 1.0.x branch will receive bug fixes for as long as there is demand for them.
New features (which do not break backwards compatibility) will continue in steadily advancing 1.x branches.&lt;/p&gt;

&lt;p&gt;Our goal is to make sure that code which compiled under Nim 1.0 continues to compile under any stable Nim 1.x version.&lt;/p&gt;

&lt;h2 id=&quot;whats-included-under-the-stability-guarantee&quot;&gt;What’s included under the stability guarantee?&lt;/h2&gt;

&lt;p&gt;Backwards compatibility covers only the stable fragment of the language, as defined by the manual.&lt;/p&gt;

&lt;p&gt;The compiler still implements experimental features which are documented in the newly written
&lt;a href=&quot;https://nim-lang.org/docs/manual_experimental.html&quot;&gt;“experimental manual”&lt;/a&gt;, these features are subject to changes which may be backwards incompatible, some of the features included under this umbrella are concepts, the do notation and a few others.
Be wary of using these features in production, but do get in touch with us if you want to learn more about our plans regarding them.&lt;/p&gt;

&lt;p&gt;The standard library is also covered, we will continue to deprecate procedures if we must, but they will remain supported throughout the 1.x version series.&lt;/p&gt;

&lt;h2 id=&quot;exceptions-to-the-rule&quot;&gt;Exceptions to the rule&lt;/h2&gt;

&lt;p&gt;We of course have to concede that there are exceptions.
In certain serious cases, like for example when a security vulnerability is discovered in the stdlib, we reserve the right to break code which uses it.&lt;/p&gt;

&lt;h1 id=&quot;installing-0200&quot;&gt;Installing 0.20.0&lt;/h1&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 0.20.0 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h2 id=&quot;nimble-0102&quot;&gt;Nimble 0.10.2&lt;/h2&gt;

&lt;p&gt;This release includes a brand new version of Nimble.
See &lt;a href=&quot;https://github.com/nim-lang/nimble/blob/master/changelog.markdown#0102---03062019&quot;&gt;Nimble changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;contributors-to-v020&quot;&gt;Contributors to v0.20&lt;/h2&gt;

&lt;p&gt;Our contributors are amazing, and there is &lt;a href=&quot;https://github.com/nim-lang/Nim/graphs/contributors?from=2018-09-26&amp;amp;to=2019-06-06&amp;amp;type=c&quot;&gt;far too many&lt;/a&gt; to list here.
Big thanks to all of you, we couldn’t have pulled off this release without you!&lt;/p&gt;

&lt;h1 id=&quot;new-features&quot;&gt;New features&lt;/h1&gt;

&lt;p&gt;Version 0.20 is positively jam packed with features.
Here is a selection of our favourites:&lt;/p&gt;

&lt;h2 id=&quot;not-is-always-a-unary-operator&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt; is always a unary operator&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.19:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Error: type mismatch: got &amp;lt;proc (cond: untyped, msg: string): typed, bool&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# workaround&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.20:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;stricter-compile-time-checks-for-integer-and-float-conversions&quot;&gt;Stricter compile time checks for integer and float conversions&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# v0.19:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uint16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 65535&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.20:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uint16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Error: -1 can't be converted to uint16&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uint16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 65535&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tuple-unpacking-for-constant-and-for-loop-variables&quot;&gt;Tuple unpacking for constant and for loop variables&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;eight&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.19: Error: identifier expected, but got '('&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.20:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 7&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# eight&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@[&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# v0.19: Error: identifier expected, but got '('&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 61&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 48&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;hash-sets-and-tables-are-initialized-by-default&quot;&gt;Hash sets and tables are initialized by default&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.19: `isValid(s)` Error: unhandled exception: The set needs to be initialized. [AssertionError]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# {5}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.19: Error: unhandled exception: index out of bounds [IndexError]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# {'a': 10}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;better-error-message-for-case-statements&quot;&gt;Better error message for case-statements&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MyEnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fourth&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;proc &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fourth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.19: compiles&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20: Error: invalid else, all cases are already covered&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;proc &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.19: Error: not all cases are covered&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20: Error: not all cases are covered; missing: {second, fourth}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-length-of-a-table-must-not-change-during-iteration&quot;&gt;The length of a table must not change during iteration&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toTable&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a lot&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# v0.19: {200: &quot;a lot&quot;, 1: &quot;one&quot;, 2: &quot;two&quot;, 3: &quot;three&quot;, 20: &quot;a lot&quot;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20: Error: unhandled exception: the length of the table changed while iterating over it [AssertionError]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;better-error-message-for-index-out-of-bounds&quot;&gt;Better error message for index out of bounds&lt;/h2&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.19: Error: index out of bounds&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# v0.20: Error: index 5 not in 0 .. 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;changelog&quot;&gt;Changelog&lt;/h1&gt;

&lt;h2 id=&quot;changes-affecting-backwards-compatibility&quot;&gt;Changes affecting backwards compatibility&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shr&lt;/code&gt; is now sign preserving. Use &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:nimOldShiftRight&lt;/code&gt; to enable
the old behavior globally.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;isLower&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;isUpper&lt;/code&gt; family of procs in strutils/unicode
operating on &lt;strong&gt;strings&lt;/strong&gt; have been
deprecated since it was unclear what these do. Note that the much more
useful procs that operate on &lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Rune&lt;/code&gt; are not affected.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;strutils.editDistance&lt;/code&gt; has been deprecated,
use &lt;code class=&quot;highlighter-rouge&quot;&gt;editdistance.editDistance&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;editdistance.editDistanceAscii&lt;/code&gt;
instead.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The OpenMP parallel iterator `&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;` now supports any &lt;code class=&quot;highlighter-rouge&quot;&gt;#pragma omp directive&lt;/code&gt;
and not just &lt;code class=&quot;highlighter-rouge&quot;&gt;#pragma omp parallel for&lt;/code&gt;. See
&lt;a href=&quot;https://www.openmp.org/wp-content/uploads/OpenMP-4.5-1115-CPP-web.pdf&quot;&gt;OpenMP documentation&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;The default annotation is &lt;code class=&quot;highlighter-rouge&quot;&gt;parallel for&lt;/code&gt;, if you used OpenMP without annotation
the change is transparent, if you used annotations you will have to prefix
your previous annotations with &lt;code class=&quot;highlighter-rouge&quot;&gt;parallel for&lt;/code&gt;.&lt;/p&gt;

    &lt;p&gt;Furthermore, an overload with positive stepping is available.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;unchecked&lt;/code&gt; pragma was removed, instead use &lt;code class=&quot;highlighter-rouge&quot;&gt;system.UncheckedArray&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The undocumented &lt;code class=&quot;highlighter-rouge&quot;&gt;#? strongSpaces&lt;/code&gt; parsing mode has been removed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt; operator is now always a unary operator, this means that code like
&lt;code class=&quot;highlighter-rouge&quot;&gt;assert not isFalse(3)&lt;/code&gt; compiles.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getImpl&lt;/code&gt; on a &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; symbol will now return the full &lt;code class=&quot;highlighter-rouge&quot;&gt;IdentDefs&lt;/code&gt;
tree from the symbol declaration instead of just the initializer portion.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Methods are now ordinary “single” methods, only the first parameter is
used to select the variant at runtime. For backwards compatibility
use the new &lt;code class=&quot;highlighter-rouge&quot;&gt;--multimethods:on&lt;/code&gt; switch.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generic methods are now deprecated; they never worked well.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compile time checks for integer and float conversions are now stricter.
For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;const x = uint32(-1)&lt;/code&gt; now gives a compile time error instead
of being equivalent to &lt;code class=&quot;highlighter-rouge&quot;&gt;const x = 0xFFFFFFFF'u32&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;typed&lt;/code&gt; as the result type in templates/macros now means
“expression with a type”. The old meaning of &lt;code class=&quot;highlighter-rouge&quot;&gt;typed&lt;/code&gt; is preserved
as &lt;code class=&quot;highlighter-rouge&quot;&gt;void&lt;/code&gt; or no result type at all.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A bug allowed &lt;code class=&quot;highlighter-rouge&quot;&gt;macro foo(): int = 123&lt;/code&gt; to compile even though a
macro has to return a &lt;code class=&quot;highlighter-rouge&quot;&gt;NimNode&lt;/code&gt;. This has been fixed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;With the exception of &lt;code class=&quot;highlighter-rouge&quot;&gt;uint&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;uint64&lt;/code&gt;, conversion to unsigned types
are now range checked during runtime.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Macro arguments of type &lt;code class=&quot;highlighter-rouge&quot;&gt;typedesc&lt;/code&gt; are now passed to the macro as
&lt;code class=&quot;highlighter-rouge&quot;&gt;NimNode&lt;/code&gt; like every other type except &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt;. Use &lt;code class=&quot;highlighter-rouge&quot;&gt;typed&lt;/code&gt; for a
behavior that is identical in new and old
Nim. See the RFC &lt;a href=&quot;https://github.com/nim-lang/RFCs/issues/148&quot;&gt;Pass typedesc as NimNode to macros&lt;/a&gt;
for more details.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;breaking-changes-in-the-standard-library&quot;&gt;Breaking changes in the standard library&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;osproc.execProcess&lt;/code&gt; now also takes a &lt;code class=&quot;highlighter-rouge&quot;&gt;workingDir&lt;/code&gt; parameter.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std/sha1.secureHash&lt;/code&gt; now accepts &lt;code class=&quot;highlighter-rouge&quot;&gt;openArray[char]&lt;/code&gt;, not &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;. (Former
 successful matches should keep working, though former failures will not.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;options.UnpackError&lt;/code&gt; is no longer a ref type and inherits from &lt;code class=&quot;highlighter-rouge&quot;&gt;system.Defect&lt;/code&gt;
instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;system.ValueError&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;system.ValueError&lt;/code&gt; now inherits from &lt;code class=&quot;highlighter-rouge&quot;&gt;system.CatchableError&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;system.Defect&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The procs &lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseBiggestInt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseInt&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseBiggestUInt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseUInt&lt;/code&gt; now raise a
&lt;code class=&quot;highlighter-rouge&quot;&gt;ValueError&lt;/code&gt; when the parsed integer is outside of the valid range.
Previously they sometimes raised an &lt;code class=&quot;highlighter-rouge&quot;&gt;OverflowError&lt;/code&gt; and sometimes they
returned &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The procs &lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseBin&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseOct&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;parseutils.parseHex&lt;/code&gt;
were not clearing their &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;number&lt;/code&gt; and used to push its value to
the left when storing the parsed string into it. Now they always set the value
of the parameter to &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; before storing the result of the parsing, unless the
string to parse is not valid (then the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;number&lt;/code&gt; is not changed).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;streams.StreamObject&lt;/code&gt; now restricts its fields to only raise &lt;code class=&quot;highlighter-rouge&quot;&gt;system.Defect&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;system.IOError&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;system.OSError&lt;/code&gt;.
This change only affects custom stream implementations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nre’s &lt;code class=&quot;highlighter-rouge&quot;&gt;RegexMatch.{captureBounds,captures}[]&lt;/code&gt;  no longer return &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; or
&lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;, respectively. Use the newly added &lt;code class=&quot;highlighter-rouge&quot;&gt;n in p.captures&lt;/code&gt; method to
check if a group is captured, otherwise you’ll receive an exception.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nre’s &lt;code class=&quot;highlighter-rouge&quot;&gt;RegexMatch.{captureBounds,captures}.toTable&lt;/code&gt; no longer accept a
default parameter. Instead uncaptured entries are left empty. Use
&lt;code class=&quot;highlighter-rouge&quot;&gt;Table.getOrDefault()&lt;/code&gt; if you need defaults.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nre’s &lt;code class=&quot;highlighter-rouge&quot;&gt;RegexMatch.captures.{items,toSeq}&lt;/code&gt; now returns an &lt;code class=&quot;highlighter-rouge&quot;&gt;Option[string]&lt;/code&gt;
instead of a &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;. With the removal of &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; strings, this is the only
way to indicate a missing match. Inside your loops, instead
of &lt;code class=&quot;highlighter-rouge&quot;&gt;capture == &quot;&quot;&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;capture == nil&lt;/code&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;capture.isSome&lt;/code&gt; to check if a capture is
present, and &lt;code class=&quot;highlighter-rouge&quot;&gt;capture.get&lt;/code&gt; to get its value.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nre’s &lt;code class=&quot;highlighter-rouge&quot;&gt;replace()&lt;/code&gt; no longer throws &lt;code class=&quot;highlighter-rouge&quot;&gt;ValueError&lt;/code&gt; when the replacement string
has missing captures. It instead throws &lt;code class=&quot;highlighter-rouge&quot;&gt;KeyError&lt;/code&gt; for named captures, and
&lt;code class=&quot;highlighter-rouge&quot;&gt;IndexError&lt;/code&gt; for unnamed captures. This is consistent with
&lt;code class=&quot;highlighter-rouge&quot;&gt;RegexMatch.{captureBounds,captures}[]&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;splitFile&lt;/code&gt; now correctly handles edge cases, see #10047.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isNil&lt;/code&gt; is no longer false for undefined in the JavaScript backend:
now it’s true for both nil and undefined.
Use &lt;code class=&quot;highlighter-rouge&quot;&gt;isNull&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;isUndefined&lt;/code&gt; if you need exact equality:
&lt;code class=&quot;highlighter-rouge&quot;&gt;isNil&lt;/code&gt; is consistent with &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;isNull&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;isUndefined&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;several deprecated modules were removed: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssl&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;matchers&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;httpserver&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;unsigned&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;actors&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;parseurl&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;two poorly documented and not used modules (&lt;code class=&quot;highlighter-rouge&quot;&gt;subexes&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;scgi&lt;/code&gt;) were moved to
graveyard (they are available as Nimble packages)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;procs &lt;code class=&quot;highlighter-rouge&quot;&gt;string.add(int)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;string.add(float)&lt;/code&gt; which implicitly convert
ints and floats to string have been deprecated.
Use &lt;code class=&quot;highlighter-rouge&quot;&gt;string.addInt(int)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;string.addFloat(float)&lt;/code&gt; instead.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;case object&lt;/code&gt; branch transitions via &lt;code class=&quot;highlighter-rouge&quot;&gt;system.reset&lt;/code&gt; are deprecated.
Compile your code with &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:nimOldCaseObjects&lt;/code&gt; for a transition period.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;base64 module: The default parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;newLine&lt;/code&gt; for the &lt;code class=&quot;highlighter-rouge&quot;&gt;encode&lt;/code&gt; procs
was changed from &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;\13\10&quot;&lt;/code&gt; to the empty string &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;breaking-changes-in-the-compiler&quot;&gt;Breaking changes in the compiler&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The compiler now implements the “generic symbol prepass” for &lt;code class=&quot;highlighter-rouge&quot;&gt;when&lt;/code&gt; statements
in generics, see bug #8603. This means that code like this does not compile
anymore:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-nim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;proc &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;enumToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;openArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# typo: 'e' instead 'enums'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;discard x&lt;/code&gt; is now illegal when &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is a function symbol.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Implicit imports via &lt;code class=&quot;highlighter-rouge&quot;&gt;--import: module&lt;/code&gt; in a config file are now restricted
to the main package.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;library-additions&quot;&gt;Library additions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;There is a new stdlib module &lt;code class=&quot;highlighter-rouge&quot;&gt;std/editdistance&lt;/code&gt; as a replacement for the
deprecated &lt;code class=&quot;highlighter-rouge&quot;&gt;strutils.editDistance&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There is a new stdlib module &lt;code class=&quot;highlighter-rouge&quot;&gt;std/wordwrap&lt;/code&gt; as a replacement for the
deprecated &lt;code class=&quot;highlighter-rouge&quot;&gt;strutils.wordwrap&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;splitWhitespace&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;size&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;alignLeft&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;align&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;strip&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;repeat&lt;/code&gt; procs and iterators to &lt;code class=&quot;highlighter-rouge&quot;&gt;unicode.nim&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;NimNode&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;macros&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;system.typeof&lt;/code&gt; for more control over how &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; expressions
can be deduced.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;macros.isInstantiationOf&lt;/code&gt; for checking if the proc symbol
is instantiation of generic proc symbol.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added the parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;isSorted&lt;/code&gt; for the &lt;code class=&quot;highlighter-rouge&quot;&gt;sequtils.deduplicate&lt;/code&gt; proc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;os.relativePath&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;parseopt.remainingArgs&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;os.getCurrentCompilerExe&lt;/code&gt; (implemented as &lt;code class=&quot;highlighter-rouge&quot;&gt;getAppFilename&lt;/code&gt; at CT),
can be used to retrieve the currently executing compiler.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;xmltree.toXmlAttributes&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;std/sums&lt;/code&gt; module for fast summation functions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;Rusage&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;getrusage&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;wait4&lt;/code&gt; to the posix interface.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added the &lt;code class=&quot;highlighter-rouge&quot;&gt;posix_utils&lt;/code&gt; module.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;system.default&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;sequtils.items&lt;/code&gt; for closure iterators, allows closure iterators
to be used by the &lt;code class=&quot;highlighter-rouge&quot;&gt;mapIt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;filterIt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;allIt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;anyIt&lt;/code&gt;, etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;library-changes&quot;&gt;Library changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The string output of &lt;code class=&quot;highlighter-rouge&quot;&gt;macros.lispRepr&lt;/code&gt; proc has been tweaked
slightly. The &lt;code class=&quot;highlighter-rouge&quot;&gt;dumpLisp&lt;/code&gt; macro in this module now outputs an
indented proper Lisp, devoid of commas.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;macros.signatureHash&lt;/code&gt; that returns a stable identifier
derived from the signature of a symbol.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;strutils&lt;/code&gt; empty strings now no longer match as substrings.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Complex&lt;/code&gt; type is now a generic object and not a tuple anymore.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;ospaths&lt;/code&gt; module is now deprecated, use &lt;code class=&quot;highlighter-rouge&quot;&gt;os&lt;/code&gt; instead. Note that
&lt;code class=&quot;highlighter-rouge&quot;&gt;os&lt;/code&gt; is available in a NimScript environment but unsupported
operations produce a compile-time error.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;parseopt&lt;/code&gt; module now supports a new flag &lt;code class=&quot;highlighter-rouge&quot;&gt;allowWhitespaceAfterColon&lt;/code&gt;
(default value: true) that can be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; for better Posix
interoperability. (Bug #9619.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;os.joinPath&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;os.normalizePath&lt;/code&gt; handle edge cases like &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a/b/../../..&quot;&lt;/code&gt;
differently.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;securehash&lt;/code&gt; was moved to &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/deprecated&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The switch &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:useWinAnsi&lt;/code&gt; is not supported anymore.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;times&lt;/code&gt; module, procs &lt;code class=&quot;highlighter-rouge&quot;&gt;format&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;parse&lt;/code&gt; accept a new optional
&lt;code class=&quot;highlighter-rouge&quot;&gt;DateTimeLocale&lt;/code&gt; argument for formatting/parsing dates in other languages.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;language-additions&quot;&gt;Language additions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Vm support for float32&amp;lt;-&amp;gt;int32 and float64&amp;lt;-&amp;gt;int64 casts was added.&lt;/li&gt;
  &lt;li&gt;There is a new pragma block &lt;code class=&quot;highlighter-rouge&quot;&gt;noSideEffect&lt;/code&gt; that works like
the &lt;code class=&quot;highlighter-rouge&quot;&gt;gcsafe&lt;/code&gt; pragma block.&lt;/li&gt;
  &lt;li&gt;added &lt;code class=&quot;highlighter-rouge&quot;&gt;os.getCurrentProcessId&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;User defined pragmas are now allowed in the pragma blocks.&lt;/li&gt;
  &lt;li&gt;Pragma blocks are no longer eliminated from the typed AST tree to preserve
pragmas for further analysis by macros.&lt;/li&gt;
  &lt;li&gt;Custom pragmas are now supported for &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; symbols.&lt;/li&gt;
  &lt;li&gt;Tuple unpacking is now supported for constants and for loop variables.&lt;/li&gt;
  &lt;li&gt;Case object branches can be initialized with a runtime discriminator if
possible discriminator values are constrained within a case statement.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;language-changes&quot;&gt;Language changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The standard extension for SCF (source code filters) files was changed from
&lt;code class=&quot;highlighter-rouge&quot;&gt;.tmpl&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;.nimf&lt;/code&gt;,
it’s more recognizable and allows tools like Github to recognize it as Nim,
see &lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9647&quot;&gt;#9647&lt;/a&gt;.
The previous extension will continue to work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pragma syntax is now consistent. Previous syntax where type pragmas did not
follow the type name is now deprecated. Also pragma before generic parameter
list is deprecated to be consistent with how pragmas are used with a proc. See
&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8514&quot;&gt;#8514&lt;/a&gt; and
&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/1872&quot;&gt;#1872&lt;/a&gt; for further details.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hash sets and tables are initialized by default. The explicit &lt;code class=&quot;highlighter-rouge&quot;&gt;initHashSet&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;initTable&lt;/code&gt;, etc. are not needed anymore.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tool-changes&quot;&gt;Tool changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jsondoc&lt;/code&gt; now includes a &lt;code class=&quot;highlighter-rouge&quot;&gt;moduleDescription&lt;/code&gt; field with the module
description. &lt;code class=&quot;highlighter-rouge&quot;&gt;jsondoc0&lt;/code&gt; shows comments as its own objects as shown in the
documentation.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nimpretty&lt;/code&gt;: –backup now defaults to &lt;code class=&quot;highlighter-rouge&quot;&gt;off&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt; and the flag was
undocumented; use &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; instead of relying on backup files.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;koch&lt;/code&gt; now defaults to build the latest &lt;em&gt;stable&lt;/em&gt; Nimble version unless you
explicitly ask for the latest master version via &lt;code class=&quot;highlighter-rouge&quot;&gt;--latest&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;compiler-changes&quot;&gt;Compiler changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The deprecated &lt;code class=&quot;highlighter-rouge&quot;&gt;fmod&lt;/code&gt; proc is now unavailable on the VM.&lt;/li&gt;
  &lt;li&gt;A new &lt;code class=&quot;highlighter-rouge&quot;&gt;--outdir&lt;/code&gt; option was added.&lt;/li&gt;
  &lt;li&gt;The compiled JavaScript file for the project produced by executing &lt;code class=&quot;highlighter-rouge&quot;&gt;nim js&lt;/code&gt;
will no longer be placed in the nimcache directory.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;--hotCodeReloading&lt;/code&gt; has been implemented for the native targets.
The compiler also provides a new more flexible API for handling the
hot code reloading events in the code.&lt;/li&gt;
  &lt;li&gt;The compiler now supports a &lt;code class=&quot;highlighter-rouge&quot;&gt;--expandMacro:macroNameHere&lt;/code&gt; switch
for easy introspection into what a macro expands into.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:release&lt;/code&gt; switch now does not disable runtime checks anymore.
For a release build that also disables runtime checks
use &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:release -d:danger&lt;/code&gt; or simply &lt;code class=&quot;highlighter-rouge&quot;&gt;-d:danger&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fixed “distinct generic typeclass not treated as distinct”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4435&quot;&gt;#4435&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “multiple dynlib pragmas with function calls conflict with each other causing link time error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9222&quot;&gt;#9222&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[RFC] &lt;code class=&quot;highlighter-rouge&quot;&gt;extractFilename(&quot;usr/lib/&quot;)&lt;/code&gt; should return “lib” (not “”) and be called &lt;code class=&quot;highlighter-rouge&quot;&gt;baseName&lt;/code&gt; (since works with dirs)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8341&quot;&gt;#8341&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “\0 in comment replaced with 0 in docs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8841&quot;&gt;#8841&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “round function in Math library sometimes doesn’t work”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9082&quot;&gt;#9082&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Async readAll in httpclient produces garbled output.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8994&quot;&gt;#8994&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[regression] project &lt;code class=&quot;highlighter-rouge&quot;&gt;config.nims&lt;/code&gt; not being read anymore”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9264&quot;&gt;#9264&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Using iterator within another iterator fails”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3819&quot;&gt;#3819&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim js -o:dirname main.nim&lt;/code&gt; writes nothing, and no error shown”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9154&quot;&gt;#9154&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Wrong number of deallocations when using destructors”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9263&quot;&gt;#9263&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “devel docs in nim-lang.github.io &lt;code class=&quot;highlighter-rouge&quot;&gt;Source&lt;/code&gt; links point to master instead of devel”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9295&quot;&gt;#9295&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “compiler/nimeval can’t be used twice: fails 2nd time with: &lt;code class=&quot;highlighter-rouge&quot;&gt;Error: internal error: n is not nil&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9180&quot;&gt;#9180&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Codegen bug with exportc”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9297&quot;&gt;#9297&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regular Expressions: replacing empty patterns only works correctly in nre”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9306&quot;&gt;#9306&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Openarray: internal compiler error when accessing length if not a param”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9281&quot;&gt;#9281&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “finish completely removing web folder”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9304&quot;&gt;#9304&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “counting the empty substring in a string results in infinite loop”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8919&quot;&gt;#8919&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Destructors] Wrong moves and copies”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9294&quot;&gt;#9294&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;proc isNil*(x: Any): bool =&lt;/code&gt; should be updated with non nil string, seq”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8916&quot;&gt;#8916&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “doAssert AST expansion excessive”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8518&quot;&gt;#8518&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “when Foo (of type iterator) is used where an expression is expected, show useful err msg instead of confusing &lt;code class=&quot;highlighter-rouge&quot;&gt;Error: attempting to call undeclared routine Foo&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8671&quot;&gt;#8671&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “List comprehensions do not work with generic parameter”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5707&quot;&gt;#5707&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “strutils/isUpperAscii and unicode/isUpper consider space, punctuations, numbers as “lowercase””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7963&quot;&gt;#7963&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regular Expressions: replacing empty patterns only works correctly in nre”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9306&quot;&gt;#9306&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “BUG: os.isHidden doesn’t work with directories; should use just paths, not filesystem access”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8225&quot;&gt;#8225&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unable to create distinct tuple in a const with a type declaration”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2760&quot;&gt;#2760&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[nimpretty] raw strings are transformed into normal strings”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9236&quot;&gt;#9236&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[nimpretty] proc is transfered to incorrect code”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8626&quot;&gt;#8626&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[nimpretty] Additional new line is added with each format”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9144&quot;&gt;#9144&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““%NIM%/config/nim.cfg” is not being read”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9244&quot;&gt;#9244&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Illegal capture on async proc (except when the argument is &lt;code class=&quot;highlighter-rouge&quot;&gt;seq&lt;/code&gt;)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2361&quot;&gt;#2361&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Jsondoc0 doesn’t output module comments.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9364&quot;&gt;#9364&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “NimPretty has troubles with source code filter”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9384&quot;&gt;#9384&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “tfragment_gc test is flaky on OSX”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9421&quot;&gt;#9421&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “ansi color code templates fail to bind symbols”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9394&quot;&gt;#9394&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Term write rule crash compiler.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7972&quot;&gt;#7972&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SIGSEGV when converting &lt;code class=&quot;highlighter-rouge&quot;&gt;lines&lt;/code&gt; to closure iterator, most likely caused by defer”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5321&quot;&gt;#5321&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SIGSEGV during the compile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5519&quot;&gt;#5519&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash when creating a variant type”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6220&quot;&gt;#6220&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““continue” inside a block without loops gives “SIGSEGV: Illegal storage access. (Attempt to read from nil?)””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6367&quot;&gt;#6367&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “old changelogs should be kept instead of erased”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9376&quot;&gt;#9376&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “illegal recursion with generic typeclass”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4674&quot;&gt;#4674&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Crash when closing an unopened file on debian 8.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9456&quot;&gt;#9456&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty joins regular and doc comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9400&quot;&gt;#9400&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty changes indentation level of trailing comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9398&quot;&gt;#9398&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Some bugs with nimpretty”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8078&quot;&gt;#8078&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Computed gotos: bad codegen, label collision with if/statement in the while body”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9276&quot;&gt;#9276&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty not idempotent: keeps adding newlines below block comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9483&quot;&gt;#9483&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty shouldn’t format differently whether there’s a top-level newline”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9484&quot;&gt;#9484&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression: 0.18 code with mapIt() fails to compile on 0.19”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9093&quot;&gt;#9093&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty shouldn’t change file modif time if no changes =&amp;gt; use os.updateFile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9499&quot;&gt;#9499&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim/compiler/pathutils.nim(226, 12) &lt;code class=&quot;highlighter-rouge&quot;&gt;canon&quot;/foo/../bar&quot; == &quot;/bar&quot;&lt;/code&gt;  [AssertionError]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9507&quot;&gt;#9507&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty adds a space before type, ptr, ref, object in wrong places”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9504&quot;&gt;#9504&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty badly indents block comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9500&quot;&gt;#9500&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “typeof: Error: illformed AST: typeof(myIter(), typeOfIter)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9498&quot;&gt;#9498&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newAsyncSmtp() raises exception with Nim 0.19.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9358&quot;&gt;#9358&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty wrongly adds empty newlines inside proc signature”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9506&quot;&gt;#9506&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “HttpClient: requesting URL with no scheme fails”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7842&quot;&gt;#7842&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Duplicate definition in cpp codegen”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6986&quot;&gt;#6986&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Sugar - distinctBase: undeclared identifier uncheckedArray”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9532&quot;&gt;#9532&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Portable fsmonitor”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6718&quot;&gt;#6718&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Small RFC. Minimal stacktrace for Exceptions when frames are disabled”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9434&quot;&gt;#9434&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim doc strutils.nim&lt;/code&gt; fails on 32 bit compiler with AssertionError on a RunnableExample”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9525&quot;&gt;#9525&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error: undeclared identifier: ‘|’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9540&quot;&gt;#9540&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “using Selectors, Error: undeclared field: ‘OSErrorCode’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7667&quot;&gt;#7667&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “The “–” template from module nimscript mis-translates “out” key”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6011&quot;&gt;#6011&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “logging error should go to stderr instead of stdout”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9547&quot;&gt;#9547&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “when in generic should fail earlier”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8603&quot;&gt;#8603&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “C++ codegen error when iterating in finally block in topmost scope”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5549&quot;&gt;#5549&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “document &lt;code class=&quot;highlighter-rouge&quot;&gt;nim --nep1:on&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9564&quot;&gt;#9564&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “C++ codegen error when iterating in finally block in topmost scope”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5549&quot;&gt;#5549&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “strutils.multiReplace() crashes if search string is “””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9557&quot;&gt;#9557&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Missing docstrings are replaced with other text”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9169&quot;&gt;#9169&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Type which followed by a function and generated by a template will not shown in docs generated by &lt;code class=&quot;highlighter-rouge&quot;&gt;nim doc&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9235&quot;&gt;#9235&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “templates expand doc comments as documentation of other procedures”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9432&quot;&gt;#9432&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “please implement http put and delete in httpClient”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8777&quot;&gt;#8777&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Module docs: 2 suggestions…”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5525&quot;&gt;#5525&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “math.hypot under/overflows”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9585&quot;&gt;#9585&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;=sink&lt;/code&gt; gets called on &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; when not used explicitly”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9594&quot;&gt;#9594&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Treat compl as a c++ keyword”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6836&quot;&gt;#6836&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Path in error message has &lt;code class=&quot;highlighter-rouge&quot;&gt;..\..\..\..\..\&lt;/code&gt;  prefix since 0.19.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9556&quot;&gt;#9556&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim check&lt;/code&gt; gives &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGSEGV: Illegal storage access&lt;/code&gt;  ; maybe because of sizeof”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9610&quot;&gt;#9610&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Cannot use a typedesc variable in a template”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9611&quot;&gt;#9611&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;=sink&lt;/code&gt; gets called on &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; when not used explicitly”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9594&quot;&gt;#9594&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[NimScript] Error: arguments can only be given if the ‘–run’ option is selected”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9246&quot;&gt;#9246&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “macros.getTypeImpl regression, crash when trying to query type information from ref object”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9600&quot;&gt;#9600&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Regression] Complex.re and Complex.im are private”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9639&quot;&gt;#9639&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim check: &lt;code class=&quot;highlighter-rouge&quot;&gt;internal error: (filename: &quot;vmgen.nim&quot;, line: 1119, column: 19)&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9609&quot;&gt;#9609&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;optInd&lt;/code&gt; missing indent specification in grammar.txt”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9608&quot;&gt;#9608&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt; as prefix operator causes problems”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9574&quot;&gt;#9574&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “It is not possible to specify a pragma for the proc that returns &lt;code class=&quot;highlighter-rouge&quot;&gt;lent T&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9633&quot;&gt;#9633&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash when initializing table with module name”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9319&quot;&gt;#9319&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “compiler crash”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8335&quot;&gt;#8335&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““SIGSEGV” without any “undeclared identifier” error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8011&quot;&gt;#8011&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Incorrect parseopt parsing ?”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9619&quot;&gt;#9619&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Operator &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt; causes a future to be completed more than once”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8982&quot;&gt;#8982&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nimpretty adds instead of removes incorrect spacing inside backticks”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9673&quot;&gt;#9673&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty should hardcode indentation amount to 2 spaces”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9502&quot;&gt;#9502&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “callSoon() is not working prior getGlobalDispatcher().”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7192&quot;&gt;#7192&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “use nimf as standardized extention for nim files with source code filter?”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9647&quot;&gt;#9647&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Banning copy for a type prevents composing”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9692&quot;&gt;#9692&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “smtp module doesn’t support threads.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9728&quot;&gt;#9728&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler segfault (stack overflow) compiling code on 0.19.0 that works on 0.18.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9694&quot;&gt;#9694&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nre doesn’t document quantifiers &lt;code class=&quot;highlighter-rouge&quot;&gt;re&quot;foo{2,4}&quot;&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9470&quot;&gt;#9470&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “ospaths still referenced despite its deprecation”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9671&quot;&gt;#9671&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;move&lt;/code&gt; on dereferenced pointer results in bogus value”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9743&quot;&gt;#9743&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression in discard statement”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9726&quot;&gt;#9726&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “try statements and exceptions do not cooperate well”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/96&quot;&gt;#96&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “XDeclaredButNotUsed doesn’t work with template, let/var/const, type; works with all other routine nodes”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9764&quot;&gt;#9764&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt; Warning: fun is deprecated&lt;/code&gt; doesn’t check whether deprecated overload is actually used”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9759&quot;&gt;#9759&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression: tuple sizeof is incorrect if contains imported object”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9794&quot;&gt;#9794&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Internal error when calling &lt;code class=&quot;highlighter-rouge&quot;&gt;=destroy&lt;/code&gt; without declaration”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9675&quot;&gt;#9675&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Internal error if &lt;code class=&quot;highlighter-rouge&quot;&gt;=sink&lt;/code&gt; is used explictly”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7365&quot;&gt;#7365&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “unicode.strip behaving oddly”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9800&quot;&gt;#9800&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “X_examples.nim generated by runnableExamples should show line number where they came from”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8289&quot;&gt;#8289&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “quit() fails with “unreachable statement after ‘return’””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9832&quot;&gt;#9832&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “quit() fails with “unreachable statement after ‘return’””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9832&quot;&gt;#9832&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;Error: internal error: genLiteral: ty is nil&lt;/code&gt; when a &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; is accessed in &lt;code class=&quot;highlighter-rouge&quot;&gt;quote do&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9864&quot;&gt;#9864&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression: sizeof Error: cannot instantiate: ‘T’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9868&quot;&gt;#9868&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Using a template as a routine pragma no longer works”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9614&quot;&gt;#9614&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Clang error on Rosencrantz”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9441&quot;&gt;#9441&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Enum fields get hintXDeclaredButNotUsed hint even when marked with used pragma”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9896&quot;&gt;#9896&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “internal error: environment misses”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9476&quot;&gt;#9476&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SIGSEGV: &lt;code class=&quot;highlighter-rouge&quot;&gt;setLen&lt;/code&gt; on a seq doesn’t construct objects at CT”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9872&quot;&gt;#9872&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Latest HEAD segfaults when compiling Aporia”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9889&quot;&gt;#9889&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unnecessary semicolon in error message”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9907&quot;&gt;#9907&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;koch temp c t.nim&lt;/code&gt; tries to look up &lt;code class=&quot;highlighter-rouge&quot;&gt;t.nim&lt;/code&gt; in nim install directory (alongside koch)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9913&quot;&gt;#9913&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression: sizeof Error: cannot instantiate: ‘T’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9868&quot;&gt;#9868&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Showstopper regression: Nimscript no longer works “
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9965&quot;&gt;#9965&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Global imports in cfg file broken”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9978&quot;&gt;#9978&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Global imports in cfg file broken”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9978&quot;&gt;#9978&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression - Nim compiler shows all gcc commands used when config.nims present”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9982&quot;&gt;#9982&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[regression] Nimscript makes a program slower and more bloated”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9995&quot;&gt;#9995&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression in Nimscript projectDir() behavior, returns empty string”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9985&quot;&gt;#9985&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Global imports don’t work for non-std modules”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9994&quot;&gt;#9994&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Object constructor regression in JS backend”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10005&quot;&gt;#10005&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression: &lt;code class=&quot;highlighter-rouge&quot;&gt;nimble install&lt;/code&gt; fails on nim devel”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9991&quot;&gt;#9991&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Another config.nims regression”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9989&quot;&gt;#9989&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim js -d:nodejs main.nim&lt;/code&gt; gives: &lt;code class=&quot;highlighter-rouge&quot;&gt;system.nim(1443, 7) Error: cannot 'importc' variable at compile time&lt;/code&gt; with a config.nims”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9153&quot;&gt;#9153&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “how to profile? using &lt;code class=&quot;highlighter-rouge&quot;&gt;--profiler:on&lt;/code&gt; causes: Error: undeclared identifier: ‘framePtr’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8991&quot;&gt;#8991&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim doc fail on lib/system/profiler.nim”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9420&quot;&gt;#9420&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[regression] ./koch tests: Error: overloaded ‘readFile’ leads to ambiguous calls (with ~/.config/nim/config.nims)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9120&quot;&gt;#9120&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression: normalizePath(“foo/..”) now incorrectly returns &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;, should be &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;.&quot;&lt;/code&gt; like before + in almost all other languages”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10017&quot;&gt;#10017&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Incorrect ‘not all cases are covered’ when using enums with nonconsecutive items”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3060&quot;&gt;#3060&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[ospaths] BUG: splitFile(“/a.txt”).dir = “” ; + other bugs with splitFile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8255&quot;&gt;#8255&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “GC bug: seems very slow where it shouldn’t; maybe it leaks?”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10040&quot;&gt;#10040&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Closure bug with the JS backend”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7048&quot;&gt;#7048&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error: unhandled exception: sym is not accessible [FieldError]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10058&quot;&gt;#10058&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “with &lt;code class=&quot;highlighter-rouge&quot;&gt;--errorMax:100&lt;/code&gt; ; link step should not be attempted if previous step failed”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9933&quot;&gt;#9933&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “import os or ospaths compilation error in js”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10066&quot;&gt;#10066&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Example for system.&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;[T: tuple | object] is misleading”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7898&quot;&gt;#7898&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Combining object variants and inheritance leads to SIGSEGV during compilation”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10033&quot;&gt;#10033&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression in distros.nim (foreignDep fails to compile)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10024&quot;&gt;#10024&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Testament megatest fails with Nim not found”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10049&quot;&gt;#10049&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “XDeclaredButNotUsed shows redundant info: declaration location shown twice”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10101&quot;&gt;#10101&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim beginner’s feedback: “echo type(1)” does not work”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5827&quot;&gt;#5827&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;sizeof&lt;/code&gt; still broken with regard to bitsize/packed bitfields”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10082&quot;&gt;#10082&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Codegen init regression”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10148&quot;&gt;#10148&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “toInt doesn’t raise an exception”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2764&quot;&gt;#2764&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “allow &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt;: makes N runnableExamples run N x faster, minimizes scope pollution”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9300&quot;&gt;#9300&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Extra procs &amp;amp; docs for the unicode module”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2353&quot;&gt;#2353&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression: CI failing &lt;code class=&quot;highlighter-rouge&quot;&gt;Error: unhandled exception: cannot open: /Users/travis/.cache/nim/docgen_sample_d/runnableExamples/docgen_sample_examples.nim [IOError]&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10188&quot;&gt;#10188&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “getAddrInfo index out of bounds error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10198&quot;&gt;#10198&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “can’t build a tuple with &lt;code class=&quot;highlighter-rouge&quot;&gt;static int&lt;/code&gt; element”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10073&quot;&gt;#10073&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty creates foo.nim.backup for foo.nims”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10211&quot;&gt;#10211&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression caused by WEXITSTATUS: &lt;code class=&quot;highlighter-rouge&quot;&gt;nim cpp compiler/nim.nim&lt;/code&gt; fails on OSX”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10231&quot;&gt;#10231&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “travis and appveyor should move the bulk of its logic to running a nim file”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10041&quot;&gt;#10041&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;Error: undeclared field: 'foo'&lt;/code&gt; should show type (+ where type is defined) (hard to guess in generic code)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8794&quot;&gt;#8794&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Discrepancy in Documentation About ‘f128 Type-Suffix”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10213&quot;&gt;#10213&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Incorrect error message”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10251&quot;&gt;#10251&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “CI should call &lt;code class=&quot;highlighter-rouge&quot;&gt;./koch tools&lt;/code&gt; ; right now &lt;code class=&quot;highlighter-rouge&quot;&gt;nimfind&lt;/code&gt; isn’t even being compiled”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10039&quot;&gt;#10039&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Building koch from nim devel fails when config.nims importing &lt;code class=&quot;highlighter-rouge&quot;&gt;os&lt;/code&gt; present”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10030&quot;&gt;#10030&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “unittest module uses &lt;code class=&quot;highlighter-rouge&quot;&gt;programResult&lt;/code&gt; to report number of failures which can wrap”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10261&quot;&gt;#10261&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nimscript doesn’t raise any exceptions”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10240&quot;&gt;#10240&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “{.push raises: [].} breaks when combined with certain symbols”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10216&quot;&gt;#10216&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Support “#.” for auto-enumerated lists in RST docs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8158&quot;&gt;#8158&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;OpenSSL error&lt;/code&gt; breaking nimble and every package”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10281&quot;&gt;#10281&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “execShellCmd returns 0 instead of nonzero when child process exits with signal (eg SIGSEGV)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10273&quot;&gt;#10273&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim check&lt;/code&gt; (and nim c –errorMax:0) SIGSEGV on first &lt;code class=&quot;highlighter-rouge&quot;&gt;index out of bounds&lt;/code&gt; error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10104&quot;&gt;#10104&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Module &lt;code class=&quot;highlighter-rouge&quot;&gt;db_sqlite&lt;/code&gt; doesn’t finalize statements with db_sqlite.rows after breaking the iterator’s loop”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7241&quot;&gt;#7241&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Performance regression with –gc:markandsweep”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10271&quot;&gt;#10271&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “internal error when using typedesc &lt;code class=&quot;highlighter-rouge&quot;&gt;is&lt;/code&gt; comparison in a macro”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10136&quot;&gt;#10136&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “cannot call template/macros with varargs[typed] to varargs[untyped]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10075&quot;&gt;#10075&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim v0.13.0 breaks symbol lookup in quote block”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3744&quot;&gt;#3744&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Some nimgrep issues”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/989&quot;&gt;#989&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Safecall problem?”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9218&quot;&gt;#9218&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim script is not supporting reading from stdin.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3983&quot;&gt;#3983&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Parameter constraints: undeclared identifier ‘{}’ within a template scope”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7524&quot;&gt;#7524&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “repr does not work with ‘var openarray’ parameter in function”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7878&quot;&gt;#7878&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “CountTable raisen error instead of returning a count of 0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10065&quot;&gt;#10065&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim c -r main.nim foo1 &quot;&quot; foo3&lt;/code&gt; doesn’t handle empty params or params w quotes”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9842&quot;&gt;#9842&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “refs #10249 ; more debug info to diagnose failures”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10266&quot;&gt;#10266&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “ObjectAssignmentError for aliased types”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10203&quot;&gt;#10203&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim cpp treats Nan as 0.0 (during compile time)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10305&quot;&gt;#10305&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “terminal.nim colored output is not GCSAFE.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8294&quot;&gt;#8294&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Building koch from nim devel fails when config.nims importing &lt;code class=&quot;highlighter-rouge&quot;&gt;os&lt;/code&gt; present”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10030&quot;&gt;#10030&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fixed “every binary cmd line option should allow on/off switch”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9629&quot;&gt;#9629&lt;/a&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Fixed “Wrong bounds check using template [] to access array in a const object”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3899&quot;&gt;#3899&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “tdont_be_stupid.nim flaky test”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10386&quot;&gt;#10386&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Separate nim install guide for users and packagers”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5182&quot;&gt;#5182&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “–embedsrc does not work on macos”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10263&quot;&gt;#10263&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Devel regression on static semcheck”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10339&quot;&gt;#10339&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “vccexe.exe does not work without VS2015 x64 Native Tools command prompt.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10358&quot;&gt;#10358&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “ospaths still referenced despite its deprecation”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9671&quot;&gt;#9671&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression in sequtils”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10433&quot;&gt;#10433&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Path in error message has &lt;code class=&quot;highlighter-rouge&quot;&gt;..\..\..\..\..\&lt;/code&gt;  prefix since 0.19.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9556&quot;&gt;#9556&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““contributing” is listed as a module on theindex”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10287&quot;&gt;#10287&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;const Foo=int&lt;/code&gt; compiles; is that legal? what does it mean?”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8610&quot;&gt;#8610&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “parsecsv can’t handle empty lines at the beginning of the file”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8365&quot;&gt;#8365&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Generated c code is not compile with the vcc cl.exe before 2012 after v0.19”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10352&quot;&gt;#10352&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Regression] converter to string leads fail to compile  on 0.19”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9149&quot;&gt;#9149&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression: memory leak with default GC”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10488&quot;&gt;#10488&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “oids counter starts at zero; spec says it should be random”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2796&quot;&gt;#2796&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “re quantifier&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;/code&gt; under-documented”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9471&quot;&gt;#9471&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Minor issues in docs regarding keywords”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9725&quot;&gt;#9725&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Explained the proc &quot;pretty&quot; in detail, file: json.nim with comments and sample program”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10466&quot;&gt;#10466&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “net.recvFrom address is always “0.0.0.0” for ipv6”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7634&quot;&gt;#7634&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “import “path with space/bar.nim” gives error msg with wrong file name”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10042&quot;&gt;#10042&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Deprecation warnings for enum values print twice”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8063&quot;&gt;#8063&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Undefined behaviour in the usage of incrSeqV3”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10568&quot;&gt;#10568&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SetMaxPoolSize not heeded”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10584&quot;&gt;#10584&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “CI broken: tests/macros/t8997.nim fails”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10591&quot;&gt;#10591&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “prevent common user config to interfere with testament”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10573&quot;&gt;#10573&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;static: writeFile&lt;/code&gt; doesn’t work anymore since &lt;code class=&quot;highlighter-rouge&quot;&gt;system refactorings&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10585&quot;&gt;#10585&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “export statement doesn’t support directories”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6227&quot;&gt;#6227&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “https://nim-lang.github.io/Nim/io.html gives 404”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10586&quot;&gt;#10586&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Choosenim fails with “ambiguous call” in rst.nim”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10602&quot;&gt;#10602&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Enable experimental feature with command line argument has no effect.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10606&quot;&gt;#10606&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Comparing function pointer with nil marks the proc as not gcsafe”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6955&quot;&gt;#6955&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “httpclient.timeout not exported”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10357&quot;&gt;#10357&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim check SIGSEGV&lt;/code&gt; (causing nimsuggest to fail too)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10547&quot;&gt;#10547&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;index out of bounds&lt;/code&gt; errors should show &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bound&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9880&quot;&gt;#9880&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Enable experimental feature with command line argument has no effect.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10606&quot;&gt;#10606&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Comparing function pointer with nil marks the proc as not gcsafe”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6955&quot;&gt;#6955&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “httpclient.timeout not exported”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10357&quot;&gt;#10357&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim check SIGSEGV&lt;/code&gt; (causing nimsuggest to fail too)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10547&quot;&gt;#10547&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “certain seq manipulations fail when compiled to JS”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10651&quot;&gt;#10651&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “system.insert does not work with strings in VM”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10561&quot;&gt;#10561&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Doc suggestion: include a link to theindex.html on …”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5515&quot;&gt;#5515&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;koch boot&lt;/code&gt; fails on windows with choosenim-installed nim: proxyexe.nim error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10659&quot;&gt;#10659&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “getImpl on type symbol hides implementation”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10702&quot;&gt;#10702&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Missing stdlib modules”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8164&quot;&gt;#8164&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “No “correct” way to declare inheritable ref object”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10195&quot;&gt;#10195&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Line number missing in stdlib trace”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6832&quot;&gt;#6832&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Better support for modifying XmlNodes”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3797&quot;&gt;#3797&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “No documentation of AsyncStreams”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6383&quot;&gt;#6383&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;set[&lt;/code&gt; in proc definition crashes compiler”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10678&quot;&gt;#10678&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “net.bindAddr fails binding to all interfaces if &lt;code class=&quot;highlighter-rouge&quot;&gt;address == &quot;&quot;&lt;/code&gt; for ipv6”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7633&quot;&gt;#7633&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Tuple unpacking of &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; vars fails inside generic proc”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10727&quot;&gt;#10727&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “initSet should be called initHashSet”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10730&quot;&gt;#10730&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “inheritable placement not symmetric between object and ref object”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3012&quot;&gt;#3012&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Alloc functions have side effects, makes it hard to use side effect tracking with destructors”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9746&quot;&gt;#9746&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “hashes:hash returns different values on Windows/Linux”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10771&quot;&gt;#10771&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “switch(“cpu”, “i386”) with –cc:vcc doesn’t work when it is written on *.nims”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10387&quot;&gt;#10387&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “async call now treated as non-gc safed call?”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10795&quot;&gt;#10795&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “{.borrow.} hangs compiler on non-distinct type (should produce an error or warning)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10791&quot;&gt;#10791&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “DCE regression: modules can’t be eliminated”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10703&quot;&gt;#10703&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unsafeaddr rendered as addr in typed AST “
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10807&quot;&gt;#10807&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Rendering of return statements in typed AST”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10805&quot;&gt;#10805&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Assigning shallow string to a field makes a copy”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10845&quot;&gt;#10845&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “func keyword for proc types doesn’t imply noSideEffect”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10838&quot;&gt;#10838&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SPAN.attachedType in toc should have no width”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10857&quot;&gt;#10857&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[docgen] Generic type pragmas in wrong place”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10792&quot;&gt;#10792&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “os.joinPaths documentation is inaccurate; should reference uri.combine”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10836&quot;&gt;#10836&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““invalid indentation” when assigning macro with code block to const”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10861&quot;&gt;#10861&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim crashes with SIGABRT after getting into a replaceTypeVars infinite loop.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10884&quot;&gt;#10884&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Booleans Work Wrong in Compile-time”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10886&quot;&gt;#10886&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “C / CPP backends differ in argument evaluation order”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8202&quot;&gt;#8202&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Change in syntax breaks valid code”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10896&quot;&gt;#10896&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;auto&lt;/code&gt; return type in macros causes internal error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10904&quot;&gt;#10904&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim string definition conflicts with other C/C++ instances”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10907&quot;&gt;#10907&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim check crash with invalid code, lowest priority”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10930&quot;&gt;#10930&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim check crash due to typing error, lowest priority”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10934&quot;&gt;#10934&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Stacktrace displayed two times”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10922&quot;&gt;#10922&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Cpp codegen regression. Showstopper”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10948&quot;&gt;#10948&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;lent T&lt;/code&gt; can return garbage”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10942&quot;&gt;#10942&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regression. atomicInc doesn’t compile with vcc and i386”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10953&quot;&gt;#10953&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “{.pure.} has no effect on objects”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10721&quot;&gt;#10721&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty doesn’t put space around operators like &lt;code class=&quot;highlighter-rouge&quot;&gt;a&amp;lt;b&lt;/code&gt; =&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;a &amp;lt; b&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10200&quot;&gt;#10200&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty messes alignment, after import statement”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9811&quot;&gt;#9811&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Destructor regression for tuples unpacking”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10940&quot;&gt;#10940&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Link error when a module defines a global variable and has no stacktrace”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10943&quot;&gt;#10943&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “std/json fails to escape most non-printables, breaking generation and parsing”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10541&quot;&gt;#10541&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “rst/markdown parser can’t handle extra parentheses after link”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10475&quot;&gt;#10475&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Random: proc rand(x: HSlice) requires substraction”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7698&quot;&gt;#7698&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Bug in setTerminate()”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10765&quot;&gt;#10765&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “ICE when using –newruntime with proc returning tuple”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11004&quot;&gt;#11004&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “terminal.nim does not compile using –newruntime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11005&quot;&gt;#11005&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Casting a seq to another seq generates invalid code with –newruntime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11018&quot;&gt;#11018&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “strformat/fmt doesn’t work for custom types [regression]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11012&quot;&gt;#11012&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Casting a seq to another seq generates invalid code with –newruntime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11018&quot;&gt;#11018&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime - &lt;code class=&quot;highlighter-rouge&quot;&gt;t.destructor != nil&lt;/code&gt;  [AssertionError] with &lt;code class=&quot;highlighter-rouge&quot;&gt;toTable()&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11014&quot;&gt;#11014&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “templates (e.g. sequtils.toSeq) often shadow &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10732&quot;&gt;#10732&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime: &lt;code class=&quot;highlighter-rouge&quot;&gt;Error: system module needs: NimStringDesc&lt;/code&gt; when calling &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; inside method on an object variant”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11048&quot;&gt;#11048&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime: internal error when iterating over seq (which is a field of an object) inside methods”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11050&quot;&gt;#11050&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error: internal error: ‘=destroy’ operator not found for type owned Node”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11053&quot;&gt;#11053&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; output can be assigned to an unowned ref”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11073&quot;&gt;#11073&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Illegal storage access when adding to a ref seq”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11065&quot;&gt;#11065&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “strformat float printing doesn’t print “.0” portion [regression]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11089&quot;&gt;#11089&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim doc2 ignores –docSeeSrcUrl parameter”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6071&quot;&gt;#6071&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “runnableExamples + forLoop = segfault”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11078&quot;&gt;#11078&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “destructible context without ‘result’ or ‘return’ should also be supported”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/1192&quot;&gt;#1192&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;new Obj&lt;/code&gt; crashes at the end of the program on newruntime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11082&quot;&gt;#11082&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Documentation of the modules broken out of system.nim are missing “
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10972&quot;&gt;#10972&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “DFA regression. Branches of AST trees are missed in control flow graph.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11095&quot;&gt;#11095&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Regression] nkIdentDefs can be left in vmgen”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11111&quot;&gt;#11111&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “JS target does not prevent calling compileTime procs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11133&quot;&gt;#11133&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;rand&lt;/code&gt; can return invalid values of a &lt;code class=&quot;highlighter-rouge&quot;&gt;range&lt;/code&gt; type”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11015&quot;&gt;#11015&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “compiler crash on discard void”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7470&quot;&gt;#7470&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unowned ref can trivially escape without causing any crashes”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11114&quot;&gt;#11114&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Destructor lifting regression”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11149&quot;&gt;#11149&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;/code&gt; alias to compile time function fails.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11045&quot;&gt;#11045&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Using type instead of typedesc in template signature fails compilation”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11058&quot;&gt;#11058&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler error caused by quote do: else”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11175&quot;&gt;#11175&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “cast to non ptr UncheckedArray does not produce an error or warning”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9403&quot;&gt;#9403&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;openArray&lt;/code&gt; generates incorrect C code with “incomplete type””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9578&quot;&gt;#9578&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “os:standalone Error: system module needs: appendString”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10978&quot;&gt;#10978&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “gensym regression”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10192&quot;&gt;#10192&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “new: module names need to be unique per Nimble broken on Windows”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11196&quot;&gt;#11196&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash on cfsml bindings”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11200&quot;&gt;#11200&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: compileTime variables can cause compilation to fail due to destructor injections”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11204&quot;&gt;#11204&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “object self-assignment order-of-evaluation broken”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9844&quot;&gt;#9844&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “seq self-assignment order-of-evaluation broken”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9684&quot;&gt;#9684&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash with generic types and static generic parameters”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7569&quot;&gt;#7569&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “C macro identifiers (e.g. errno) are not properly avoided in code generation”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11153&quot;&gt;#11153&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SIGSEGV in asgnRefNoCycle with const sequence”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9825&quot;&gt;#9825&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “asyncdispatch could not be linked to nimrtl”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6855&quot;&gt;#6855&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: Bad C++ codegen for ref types with destructors”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11215&quot;&gt;#11215&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Better error message for object variant with enum that is below it”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4140&quot;&gt;#4140&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Can’t declare a mixin.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11237&quot;&gt;#11237&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim doc mangles signed octal literals”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11131&quot;&gt;#11131&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Selectors, Error: undeclared field: ‘OSErrorCode’ on macOS”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11124&quot;&gt;#11124&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;--cppCompileToNamespace:foo&lt;/code&gt; fails compilation with &lt;code class=&quot;highlighter-rouge&quot;&gt;import os&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11194&quot;&gt;#11194&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[OpenMP] Nim symbol interpolation support”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9365&quot;&gt;#9365&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Inconsistent typing error with gensymed var”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7937&quot;&gt;#7937&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “New module names break file-specific flags”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11202&quot;&gt;#11202&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “inheritance for generics does not work”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/88&quot;&gt;#88&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Possible bug related to generics type resolution/matched”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6732&quot;&gt;#6732&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “static range type bounds not checked when conversion from intLit”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3766&quot;&gt;#3766&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “threadpool: sync() deadlocks in high-CPU-usage scenarios”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11250&quot;&gt;#11250&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “var result array - bad codegen (null pointer dereference)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8053&quot;&gt;#8053&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “future/sugar &lt;code class=&quot;highlighter-rouge&quot;&gt;=&amp;gt;&lt;/code&gt; syntax breaks with generics”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7816&quot;&gt;#7816&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “os.joinPath removes the leading backslash from UNC paths (regression)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10952&quot;&gt;#10952&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “re: memory leak when calling re proc repeatedly”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11139&quot;&gt;#11139&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “threadpool: tests/parallel/tconvexhull.nim segfaults intermittently on systems with more than 4 cores”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11275&quot;&gt;#11275&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Not equal when streams.readBool and peekBool compare &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11049&quot;&gt;#11049&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;os.tailDir&lt;/code&gt; fails on some paths”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8395&quot;&gt;#8395&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Power op ^ is not optimized for a: int; echo a ^ 2 case (minor bug)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10910&quot;&gt;#10910&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;str &amp;amp;= data&lt;/code&gt; doesn’t behave as &lt;code class=&quot;highlighter-rouge&quot;&gt;str = str &amp;amp; data&lt;/code&gt;.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10963&quot;&gt;#10963&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unable to make a const instance of an inherited, generic object.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11268&quot;&gt;#11268&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Overload precedence for non-builtin types”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11239&quot;&gt;#11239&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error when trying to iterate a distinct type based array”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7167&quot;&gt;#7167&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Objects marked with {.exportc.} should be fully defined in generated header”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4723&quot;&gt;#4723&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Generic function specialization regression”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6076&quot;&gt;#6076&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “compiler should give ambiguity errors in case of multiple compatible matches”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8568&quot;&gt;#8568&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;xmltree.findAll&lt;/code&gt; doesn’t work as expected with &lt;code class=&quot;highlighter-rouge&quot;&gt;htmlparser&lt;/code&gt; for non-lowercase names”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8329&quot;&gt;#8329&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “wrong stack trace information about the raised exception”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11309&quot;&gt;#11309&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: owned procs don’t implicitly convert to unowned in &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11257&quot;&gt;#11257&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “order of imports can cause errors”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11187&quot;&gt;#11187&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Passing code via stdin to Nim stopped working [regression Nim 0.19+]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11294&quot;&gt;#11294&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “”–out:” switch is ineffective with “nim doc” [regression]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11312&quot;&gt;#11312&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “VC++ broken in devel: module machine type ‘X86’ conflicts with target machine type ‘x64’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11306&quot;&gt;#11306&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Code that used &lt;code class=&quot;highlighter-rouge&quot;&gt;multi&lt;/code&gt; aspect of multimethod now crashes at runtime”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10912&quot;&gt;#10912&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “symbol resolution issues when ambiguous call happens in generic proc”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11188&quot;&gt;#11188&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “compile pragma name collision”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10299&quot;&gt;#10299&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Unexpected behaviour on method dispatch”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10038&quot;&gt;#10038&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim object variant issue”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/1286&quot;&gt;#1286&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “json.to macro cannot handle ambiguous types even in a full form (module.Type)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11057&quot;&gt;#11057&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Out of bounds access in CritBitTree”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11344&quot;&gt;#11344&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Newruntime: assignment to discriminant field in case objects not supported”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11205&quot;&gt;#11205&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Dynamic dispatch broken if base method returns generic var type”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6777&quot;&gt;#6777&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “newruntime and unused generics: compiler crash”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6755&quot;&gt;#6755&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Type aliases do not work with Exceptions.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10889&quot;&gt;#10889&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash when accessing constant in nested template”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5235&quot;&gt;#5235&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “unicode.nim Error: type mismatch: got &amp;lt;seq[char]&amp;gt; but expected ‘string’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9762&quot;&gt;#9762&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Internal error with auto return in closure iterator”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5859&quot;&gt;#5859&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Compiler Crash] - getAST + hasCustomPragma”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7615&quot;&gt;#7615&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “debug mode compiler crash when executing some compile time code”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8199&quot;&gt;#8199&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler does not set &lt;code class=&quot;highlighter-rouge&quot;&gt;.typ&lt;/code&gt; inside macros when creating literal NimNodes”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7792&quot;&gt;#7792&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error: internal error: expr: var not init sevColor_994035”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8573&quot;&gt;#8573&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;internal error: could not find env param for&lt;/code&gt; when one iterator references another”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9827&quot;&gt;#9827&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “internal error when assigning a type to a constant of typedesc”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9961&quot;&gt;#9961&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Overload resolution regression”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11375&quot;&gt;#11375&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “strutils: toBin(64) uses ‘/’ for the 63rd bit if it’s set”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11369&quot;&gt;#11369&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “base64.encode should not “prettify” the result by default”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11364&quot;&gt;#11364&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim ships latest nimble rather than stable”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11402&quot;&gt;#11402&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;debugger:native&lt;/code&gt; no longer generates pdb file with &lt;code class=&quot;highlighter-rouge&quot;&gt;cc:vcc&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/11405&quot;&gt;#11405&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 06 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/06/06/version-0200-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/06/06/version-0200-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 0.19.6 released</title>
        <description>&lt;p&gt;The Nim team is happy to announce that the latest release of Nim,
version 0.19.6, is now available. Nim is a systems programming language that
focuses on performance, portability and expressiveness.&lt;/p&gt;

&lt;p&gt;This is the third bugfix release of version 0.19.
There are no breaking changes.
The most important bugfixes are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Boolean logic at compile time is now correct.&lt;/li&gt;
  &lt;li&gt;Bitwise operations on signed integers in VM are fixed.&lt;/li&gt;
  &lt;li&gt;Fixed object self-assignment order of evaluation.&lt;/li&gt;
  &lt;li&gt;Compiler no longer crashes with generic types and static generic parameters.&lt;/li&gt;
  &lt;li&gt;Fixed raising generic exceptions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installing-0196&quot;&gt;Installing 0.19.6&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 0.19.6 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fixed “32 bit signed xor broken on VM”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10482&quot;&gt;#10482&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SetMaxPoolSize not heeded”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10584&quot;&gt;#10584&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “uint inplace add in if branch is omitted when compiled to JS”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10697&quot;&gt;#10697&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Booleans Work Wrong in Compile-time”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10886&quot;&gt;#10886&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Bug in setTerminate()”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10765&quot;&gt;#10765&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Cannot raise generic exception”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7845&quot;&gt;#7845&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nim string definition conflicts with other C/C++ instances”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10907&quot;&gt;#10907&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “std/json fails to escape most non-printables, breaking generation and parsing”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10541&quot;&gt;#10541&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “object self-assignment order-of-evaluation broken”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9844&quot;&gt;#9844&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash with generic types and static generic parameters”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7569&quot;&gt;#7569&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 13 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/05/13/version-0196-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/05/13/version-0196-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 0.19.4 released</title>
        <description>&lt;p&gt;The Nim team is happy to announce that the latest release of Nim,
version 0.19.4, is now available. Nim is a systems programming language that
focuses on performance, portability and expressiveness.&lt;/p&gt;

&lt;p&gt;This is mostly a bugfix release of version 0.19.2.
There are no breaking changes.
The most important bugfixes are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The mark&amp;amp;sweep GC had a serious performance regression that has been fixed.&lt;/li&gt;
  &lt;li&gt;The produced tarballs now support &lt;code class=&quot;highlighter-rouge&quot;&gt;koch tests&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Json escaping has been fixed.&lt;/li&gt;
  &lt;li&gt;The documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; procs was missing, fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installing-0194&quot;&gt;Installing 0.19.4&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 0.19.4 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fixed “Latest HEAD segfaults when compiling Aporia”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9889&quot;&gt;#9889&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “smtp module doesn’t support threads.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9728&quot;&gt;#9728&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “toInt doesn’t raise an exception”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2764&quot;&gt;#2764&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “allow &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt;: makes N runnableExamples run N x faster, minimizes scope pollution”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9300&quot;&gt;#9300&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “regression: CI failing &lt;code class=&quot;highlighter-rouge&quot;&gt;Error: unhandled exception: cannot open: /Users/travis/.cache/nim/docgen_sample_d/runnableExamples/docgen_sample_examples.nim [IOError]&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10188&quot;&gt;#10188&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Discrepancy in Documentation About ‘f128 Type-Suffix”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10213&quot;&gt;#10213&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Performance regression with –gc:markandsweep”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10271&quot;&gt;#10271&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “cannot call template/macros with varargs[typed] to varargs[untyped]”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10075&quot;&gt;#10075&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “–embedsrc does not work on macos”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10263&quot;&gt;#10263&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “terminal.nim colored output is not GCSAFE.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8294&quot;&gt;#8294&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Path in error message has &lt;code class=&quot;highlighter-rouge&quot;&gt;..\..\..\..\..\&lt;/code&gt;  prefix since 0.19.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9556&quot;&gt;#9556&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““contributing” is listed as a module on theindex”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/10287&quot;&gt;#10287&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Regression] converter to string leads fail to compile  on 0.19”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9149&quot;&gt;#9149&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “oids counter starts at zero; spec says it should be random”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2796&quot;&gt;#2796&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Feb 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/02/01/version-0194-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/02/01/version-0194-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Nim in 2018: A short recap</title>
        <description>&lt;p&gt;There were several big news in the Nim world in 2018 – two new major releases, partnership with Status, and much more.
But let us go chronologically.&lt;/p&gt;

&lt;h2 id=&quot;fosdem-2018-participation&quot;&gt;FOSDEM 2018 participation&lt;/h2&gt;

&lt;p&gt;The first week of February is reserved for FOSDEM, where members of Nim core development team were promoting the newly published book &lt;a href=&quot;https://book.picheta.me/&quot;&gt;Nim in Action&lt;/a&gt;, selling Nim T-shirts, and meeting with Nim developers.&lt;/p&gt;

&lt;h2 id=&quot;version-018&quot;&gt;Version 0.18&lt;/h2&gt;

&lt;p&gt;In March 2018, &lt;a href=&quot;https://nim-lang.org/blog/2018/03/01/version-0180-released.html&quot;&gt;version 0.18&lt;/a&gt; has been released.
With more than 1300 commits since the previous version, it was the biggest release of Nim so far.&lt;/p&gt;

&lt;p&gt;It introduced &lt;a href=&quot;https://nim-lang.org/docs/strformat.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;strformat&lt;/code&gt; module&lt;/a&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;fmt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; operators for formatted string literals, the ability to have testable documentation examples with &lt;code class=&quot;highlighter-rouge&quot;&gt;runnableExamples&lt;/code&gt;, and numerous &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; improvements.
The TLSF algorithm has been implemented to reduce memory fragmentation, which made &lt;code class=&quot;highlighter-rouge&quot;&gt;alloc&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;dealloc&lt;/code&gt; O(1) operations.&lt;/p&gt;

&lt;h2 id=&quot;partnership-with-statusim&quot;&gt;Partnership with Status.im&lt;/h2&gt;

&lt;p&gt;In August the partnership with &lt;a href=&quot;https://status.im/&quot;&gt;Status&lt;/a&gt; was announced.&lt;/p&gt;

&lt;p&gt;The Status team has chosen the Nim programming language as a base for the implementation of a sharding client for Ethereum, named &lt;a href=&quot;https://github.com/status-im/nimbus&quot;&gt;Nimbus&lt;/a&gt;.
With this partnership Status will support the Nim team with funding and resources needed to stay focused on the development of the Nim programming language.&lt;/p&gt;

&lt;p&gt;This allowed hiring two full-time developers, tasked with fixing bugs, responding to issues, and developing the compiler, the standard library and the tooling.&lt;/p&gt;

&lt;h2 id=&quot;version-019&quot;&gt;Version 0.19&lt;/h2&gt;

&lt;p&gt;Version 0.19, &lt;a href=&quot;https://nim-lang.org/blog/2018/09/26/version-0190-released.html&quot;&gt;released in September&lt;/a&gt;, took the crown from 0.18 as the biggest release yet, with more than 1400 new commits.&lt;/p&gt;

&lt;p&gt;The biggest change introduced is that the &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; state for strings and sequences is gone – the default value for these are &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@[]&lt;/code&gt; (an empty string, and an empty sequence, respectively).
This eliminates a major confusion-point for beginners, and makes Nim more pleasant for everybody.&lt;/p&gt;

&lt;p&gt;This version introduced &lt;code class=&quot;highlighter-rouge&quot;&gt;experimental&lt;/code&gt; as a pragma and a command line switch that can enable specific language extensions (it is not an all-or-nothing switch, like before).
Other notable additions include &lt;code class=&quot;highlighter-rouge&quot;&gt;func&lt;/code&gt; as an alias for a procedure with no side effects, supporting &lt;code class=&quot;highlighter-rouge&quot;&gt;except&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt; statement, so called “for-loop macros”, &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; working with exception handling (now it is possible to use &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; in a &lt;code class=&quot;highlighter-rouge&quot;&gt;try&lt;/code&gt; statement), and more.&lt;/p&gt;

&lt;h2 id=&quot;hacktoberfest&quot;&gt;Hacktoberfest&lt;/h2&gt;

&lt;p&gt;In October our community participated in Hacktoberfest, resulting in impressive 275 closed issues and 160 merged pull requests – more detailed documentation, improved tests, general cleanup, and much more.
These improvements will be part of 0.20 release, and some of them are already backported to the latest bugfix release – &lt;a href=&quot;https://nim-lang.org/blog/2018/12/31/version-0192-released.html&quot;&gt;0.19.2&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;nim-in-2019&quot;&gt;Nim in 2019&lt;/h2&gt;

&lt;p&gt;If you’re interested in seeing and hearing what has been done in 2018 directly from the core developers, take a look at &lt;a href=&quot;https://www.youtube.com/watch?v=xUsAKstP-AQ&quot;&gt;Nim Development Blog 2018&lt;/a&gt; on Youtube.&lt;/p&gt;

&lt;p&gt;We have switched to a different release model, with a stable branch (currently that’s v0.19.x) which receives bugfixes, it is aimed at daily usage, and Nimble package development should target this version; and a devel branch which will become a new major release – v0.20, and serve as a release candidate for v1.0.&lt;/p&gt;

&lt;p&gt;In 2019, the Nim team will continue to work towards that goal, which will mark the end of breaking changes to Nim.
We are focusing on the main areas shown in &lt;a href=&quot;https://nim-lang.org/blog/2018/10/27/community-survey-results-2018.html&quot;&gt;Nim community survey 2018&lt;/a&gt; as needed before Nim v1.0:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;better documentation&lt;/li&gt;
  &lt;li&gt;better standard library&lt;/li&gt;
  &lt;li&gt;stabilization&lt;/li&gt;
  &lt;li&gt;implementing destructors and move semantics for a more flexible concurrency model and reduced memory usage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Community help is, as always, welcome.
Report &lt;a href=&quot;https://github.com/nim-lang/nim/issues&quot;&gt;issues and bugs&lt;/a&gt;, make &lt;a href=&quot;https://github.com/nim-lang/nim/pulls&quot;&gt;pull requests&lt;/a&gt;, consider &lt;a href=&quot;https://nim-lang.org/donate.html&quot;&gt;donating&lt;/a&gt; or becoming a &lt;a href=&quot;https://nim-lang.org/sponsors.html&quot;&gt;sponsor&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Jan 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2019/01/08/nim-in-2018-a-short-recap.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2019/01/08/nim-in-2018-a-short-recap.html</guid>
        
        
      </item>
    
      <item>
        <title>Version 0.19.2 released</title>
        <description>&lt;p&gt;The Nim team is happy to announce that the latest release of Nim,
version 0.19.2, is now available. Nim is a systems programming language that
focuses on performance, portability and expressiveness.&lt;/p&gt;

&lt;p&gt;This is mostly a bugfix release of version 0.19.0.
It adds RISC-V support and there are no breaking changes.
The most important bugfixes are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;spawn&lt;/code&gt; can handle the empty seqs/strings that are internally
represented as &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The most pressing bugs of the documentation generator have been fixed.&lt;/li&gt;
  &lt;li&gt;async streaming of the httpclient has been fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installing-0192&quot;&gt;Installing 0.19.2&lt;/h2&gt;

&lt;p&gt;If you have installed a previous version of Nim using &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt;,
getting Nim 0.19.2 is as easy as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;choosenim update stable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t have it already, you can get &lt;code class=&quot;highlighter-rouge&quot;&gt;choosenim&lt;/code&gt; by following
&lt;a href=&quot;https://github.com/dom96/choosenim&quot;&gt;these instructions&lt;/a&gt; or you can install
Nim by following the instructions on our
&lt;a href=&quot;https://nim-lang.org/install.html&quot;&gt;install&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&quot;compiler-changes&quot;&gt;Compiler changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Added support for the RISC-V 64 bit architecture named riscv64
(e.g. &lt;a href=&quot;https://www.sifive.com/boards/hifive-unleashed&quot;&gt;HiFive&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fixed “Nim 0.19.0 docs have incorrect Source/Edit links”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9083&quot;&gt;#9083&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Json: compilation fails with aliased type”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9111&quot;&gt;#9111&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “https://nim-lang.org/docs/nre.html gives 404 error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9119&quot;&gt;#9119&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Leaving &lt;code class=&quot;highlighter-rouge&quot;&gt;\\&lt;/code&gt; at the end of a path in &lt;code class=&quot;highlighter-rouge&quot;&gt;copyDir&lt;/code&gt; removes every file’s first char”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9126&quot;&gt;#9126&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim doc SIGSEGV: Illegal storage access.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9140&quot;&gt;#9140&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[doc] List of broken links in the doc site”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9109&quot;&gt;#9109&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Fix incorrect examples in nre docs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9053&quot;&gt;#9053&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Clean up root of repo and release archives”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4934&quot;&gt;#4934&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Concept/converter/generics-related compiler crash”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7351&quot;&gt;#7351&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “converter + concept causes compiler to quit without error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6249&quot;&gt;#6249&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Error: internal error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6533&quot;&gt;#6533&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Methods break static[T] (internal error: nesting too deep)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5479&quot;&gt;#5479&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Memory error when checking if a variable is a string in concept”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7092&quot;&gt;#7092&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Internal error when using array of procs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5015&quot;&gt;#5015&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[Regression] Compiler crash on proc with static, used to compile in nim 0.16”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5868&quot;&gt;#5868&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “fixes/8099”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8451&quot;&gt;#8451&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “distinct generic typeclass not treated as distinct”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/4435&quot;&gt;#4435&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “multiple dynlib pragmas with function calls conflict with each other causing link time error”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9222&quot;&gt;#9222&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “\0 in comment replaced with 0 in docs”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8841&quot;&gt;#8841&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Async readAll in httpclient produces garbled output.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8994&quot;&gt;#8994&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;runnableExamples&lt;/code&gt; should be run by &lt;code class=&quot;highlighter-rouge&quot;&gt;nim doc&lt;/code&gt; even if symbol is not public”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9216&quot;&gt;#9216&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[regression] project &lt;code class=&quot;highlighter-rouge&quot;&gt;config.nims&lt;/code&gt; not being read anymore”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9264&quot;&gt;#9264&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Using iterator within another iterator fails”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/3819&quot;&gt;#3819&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim js -o:dirname main.nim&lt;/code&gt; writes nothing, and no error shown”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9154&quot;&gt;#9154&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “devel docs in nim-lang.github.io &lt;code class=&quot;highlighter-rouge&quot;&gt;Source&lt;/code&gt; links point to master instead of devel”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9295&quot;&gt;#9295&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Regular Expressions: replacing empty patterns only works correctly in nre”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9306&quot;&gt;#9306&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “counting the empty substring in a string results in infinite loop”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8919&quot;&gt;#8919&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[nimpretty] raw strings are transformed into normal strings”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9236&quot;&gt;#9236&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[nimpretty] proc is transfered to incorrect code”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8626&quot;&gt;#8626&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[nimpretty] Additional new line is added with each format”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9144&quot;&gt;#9144&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed ““%NIM%/config/nim.cfg” is not being read”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9244&quot;&gt;#9244&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Illegal capture on async proc (except when the argument is &lt;code class=&quot;highlighter-rouge&quot;&gt;seq&lt;/code&gt;)”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/2361&quot;&gt;#2361&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Jsondoc0 doesn’t output module comments.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9364&quot;&gt;#9364&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “NimPretty has troubles with source code filter”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9384&quot;&gt;#9384&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fixed “tfragment_gc test is flaky on OSX”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9421&quot;&gt;#9421&lt;/a&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Fixed “ansi color code templates fail to bind symbols”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9394&quot;&gt;#9394&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “SIGSEGV when converting &lt;code class=&quot;highlighter-rouge&quot;&gt;lines&lt;/code&gt; to closure iterator, most likely caused by defer”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5321&quot;&gt;#5321&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler crash when creating a variant type”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6220&quot;&gt;#6220&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fixed “old changelogs should be kept instead of erased”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9376&quot;&gt;#9376&lt;/a&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Fixed “Crash when closing an unopened file on debian 8.”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9456&quot;&gt;#9456&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty joins regular and doc comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9400&quot;&gt;#9400&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty changes indentation level of trailing comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9398&quot;&gt;#9398&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Some bugs with nimpretty”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/8078&quot;&gt;#8078&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty not idempotent: keeps adding newlines below block comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9483&quot;&gt;#9483&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty shouldn’t format differently whether there’s a top-level newline”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9484&quot;&gt;#9484&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty shouldn’t change file modif time if no changes =&amp;gt; use os.updateFile”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9499&quot;&gt;#9499&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty adds a space before type, ptr, ref, object in wrong places”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9504&quot;&gt;#9504&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty badly indents block comment”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9500&quot;&gt;#9500&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty wrongly adds empty newlines inside proc signature”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9506&quot;&gt;#9506&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Duplicate definition in cpp codegen”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/6986&quot;&gt;#6986&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;nim doc strutils.nim&lt;/code&gt; fails on 32 bit compiler with AssertionError on a RunnableExample”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9525&quot;&gt;#9525&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fixed “using Selectors, Error: undeclared field: ‘OSErrorCode’”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/7667&quot;&gt;#7667&lt;/a&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Fixed “strutils.multiReplace() crashes if search string is “””
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9557&quot;&gt;#9557&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Type which followed by a function and generated by a template will not shown in docs generated by &lt;code class=&quot;highlighter-rouge&quot;&gt;nim doc&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9235&quot;&gt;#9235&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Module docs: 2 suggestions…”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/5525&quot;&gt;#5525&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Missing docstrings are replaced with other text”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9169&quot;&gt;#9169&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “templates expand doc comments as documentation of other procedures”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9432&quot;&gt;#9432&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Path in error message has &lt;code class=&quot;highlighter-rouge&quot;&gt;..\..\..\..\..\&lt;/code&gt;  prefix since 0.19.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9556&quot;&gt;#9556&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fixed “Nim/compiler/pathutils.nim(226, 12) &lt;code class=&quot;highlighter-rouge&quot;&gt;canon&quot;/foo/../bar&quot; == &quot;/bar&quot;&lt;/code&gt;  [AssertionError]” (&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9507&quot;&gt;#9507&lt;/a&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Fixed “[Regression] Borrow stringify operator no longer works as expected”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9322&quot;&gt;#9322&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “[NimScript] Error: arguments can only be given if the ‘–run’ option is selected”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9246&quot;&gt;#9246&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nim check: &lt;code class=&quot;highlighter-rouge&quot;&gt;internal error: (filename: &quot;vmgen.nim&quot;, line: 1119, column: 19)&lt;/code&gt;”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9609&quot;&gt;#9609&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “&lt;code class=&quot;highlighter-rouge&quot;&gt;optInd&lt;/code&gt; missing indent specification in grammar.txt”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9608&quot;&gt;#9608&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “nimpretty should hardcode indentation amount to 2 spaces”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9502&quot;&gt;#9502&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Nimpretty adds instead of removes incorrect spacing inside backticks”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9673&quot;&gt;#9673&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed “Compiler segfault (stack overflow) compiling code on 0.19.0 that works on 0.18.0”
(&lt;a href=&quot;https://github.com/nim-lang/Nim/issues/9694&quot;&gt;#9694&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 31 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2018/12/31/version-0192-released.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/12/31/version-0192-released.html</guid>
        
        
      </item>
    
      <item>
        <title>Advent of Nim</title>
        <description>&lt;p&gt;Saturday December 1st at 5 a.m. UTC will mark the start of the fourth incarnation of &lt;a href=&quot;https://adventofcode.com/&quot;&gt;Advent of Code&lt;/a&gt;, popular programming contest started back in 2015.
The author describes Advent of Code (AoC) as “&lt;em&gt;a series of small programming puzzles for a variety of skill sets and skill levels in any programming language you like&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;The rules of AoC are quite simple.
Starting from December 1st until Christmas, every day at 5 a.m. UTC a new task is released.
The tasks consist of two parts, where second part is revealed after you solve the first part, and it is a continuation and/or variation of the first part.
You don’t submit your code, just the result of your calculation.&lt;/p&gt;

&lt;p&gt;The participation in AoC is free (although, if you like it, consider &lt;a href=&quot;https://adventofcode.com/2018/support&quot;&gt;donating&lt;/a&gt;), all you need to do is log in with your Github, Google, Twitter, or Reddit account.&lt;/p&gt;

&lt;h2 id=&quot;nim-leaderboard&quot;&gt;Nim leaderboard&lt;/h2&gt;

&lt;p&gt;We are organizing the official Nim &lt;a href=&quot;https://adventofcode.com/2018/leaderboard/private&quot;&gt;private leaderboard&lt;/a&gt;, where you can compete against other Nim users.
To join the Nim leaderboard, all you have to do is use &lt;code class=&quot;highlighter-rouge&quot;&gt;40415-c732e66e&lt;/code&gt; code in the previous link.&lt;/p&gt;

&lt;p&gt;The Nim team has decided to reward the best (fastest) player on Nim leaderboard, as well as the solutions which best showcase the power and capabilities of Nim language.
Post a link to your AoC repository in &lt;a href=&quot;https://forum.nim-lang.org/t/4416&quot;&gt;this forum thread&lt;/a&gt; and share the solutions you’re most proud of, and maybe you’ll be one of the winners of &lt;a href=&quot;https://book.picheta.me/&quot;&gt;“Nim in Action”&lt;/a&gt; book, Nim &lt;a href=&quot;https://vangogh.teespring.com/v3/image/RBPbLAWhGKK_o7nwZHp6gYTN1d8/480/560.jpg&quot;&gt;T-shirt&lt;/a&gt;, or stickers.&lt;/p&gt;

&lt;p&gt;People usually share their solutions on &lt;a href=&quot;https://old.reddit.com/r/adventofcode/&quot;&gt;r/adventofcode subreddit&lt;/a&gt; and we encourage you to share your Nim solutions there too.&lt;/p&gt;

&lt;p&gt;If you have never participated in AoC before or you want to prepare yourself for the start of the competition by solving some tasks, take a look at &lt;a href=&quot;https://adventofcode.com/2018/events&quot;&gt;the previous events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Nov 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/blog/2018/11/26/advent-of-nim.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/11/26/advent-of-nim.html</guid>
        
        
      </item>
    
  </channel>
</rss>
